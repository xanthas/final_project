// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: RobotState.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "RobotState.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace roah_rsbb_msgs {

namespace {

const ::google::protobuf::Descriptor* RobotState_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RobotState_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* RobotState_CompType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* RobotState_State_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_RobotState_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_RobotState_2eproto() {
  protobuf_AddDesc_RobotState_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "RobotState.proto");
  GOOGLE_CHECK(file != NULL);
  RobotState_descriptor_ = file->message_type(0);
  static const int RobotState_offsets_[14] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RobotState, time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RobotState, messages_saved_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RobotState, robot_state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RobotState, notifications_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RobotState, activation_event_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RobotState, visitor_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RobotState, final_command_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RobotState, devices_switch_1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RobotState, devices_switch_2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RobotState, devices_switch_3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RobotState, devices_dimmer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RobotState, devices_blinds_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RobotState, tablet_display_map_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RobotState, generic_result_),
  };
  RobotState_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RobotState_descriptor_,
      RobotState::default_instance_,
      RobotState_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RobotState, _has_bits_[0]),
      -1,
      -1,
      sizeof(RobotState),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RobotState, _internal_metadata_),
      -1);
  RobotState_CompType_descriptor_ = RobotState_descriptor_->enum_type(0);
  RobotState_State_descriptor_ = RobotState_descriptor_->enum_type(1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_RobotState_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RobotState_descriptor_, &RobotState::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_RobotState_2eproto() {
  delete RobotState::default_instance_;
  delete RobotState_reflection_;
}

void protobuf_AddDesc_RobotState_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_RobotState_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::roah_rsbb_msgs::protobuf_AddDesc_Time_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020RobotState.proto\022\016roah_rsbb_msgs\032\nTime"
    ".proto\"\204\004\n\nRobotState\022\"\n\004time\030\001 \002(\0132\024.ro"
    "ah_rsbb_msgs.Time\022\026\n\016messages_saved\030\002 \002("
    "\r\0225\n\013robot_state\030\003 \002(\0162 .roah_rsbb_msgs."
    "RobotState.State\022\025\n\rnotifications\030\010 \003(\t\022"
    "\030\n\020activation_event\030\t \003(\t\022\017\n\007visitor\030\n \003"
    "(\t\022\025\n\rfinal_command\030\020 \003(\t\022\030\n\020devices_swi"
    "tch_1\030\021 \001(\010\022\030\n\020devices_switch_2\030\022 \001(\010\022\030\n"
    "\020devices_switch_3\030\023 \001(\010\022\026\n\016devices_dimme"
    "r\030\024 \001(\r\022\026\n\016devices_blinds\030\025 \001(\r\022\032\n\022table"
    "t_display_map\030\026 \001(\010\022\026\n\016generic_result\030\027 "
    "\001(\t\"&\n\010CompType\022\014\n\007COMP_ID\020\2124\022\014\n\010MSG_TYP"
    "E\020(\"P\n\005State\022\010\n\004STOP\020\000\022\r\n\tPREPARING\020\001\022\020\n"
    "\014WAITING_GOAL\020\002\022\r\n\tEXECUTING\020\003\022\r\n\tRESULT"
    "_TX\020\004B,\n\030eu.rockin.roah_rsbb_msgsB\020Robot"
    "StateProtos", 611);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "RobotState.proto", &protobuf_RegisterTypes);
  RobotState::default_instance_ = new RobotState();
  RobotState::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_RobotState_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_RobotState_2eproto {
  StaticDescriptorInitializer_RobotState_2eproto() {
    protobuf_AddDesc_RobotState_2eproto();
  }
} static_descriptor_initializer_RobotState_2eproto_;

// ===================================================================

const ::google::protobuf::EnumDescriptor* RobotState_CompType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RobotState_CompType_descriptor_;
}
bool RobotState_CompType_IsValid(int value) {
  switch(value) {
    case 40:
    case 6666:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const RobotState_CompType RobotState::COMP_ID;
const RobotState_CompType RobotState::MSG_TYPE;
const RobotState_CompType RobotState::CompType_MIN;
const RobotState_CompType RobotState::CompType_MAX;
const int RobotState::CompType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* RobotState_State_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RobotState_State_descriptor_;
}
bool RobotState_State_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const RobotState_State RobotState::STOP;
const RobotState_State RobotState::PREPARING;
const RobotState_State RobotState::WAITING_GOAL;
const RobotState_State RobotState::EXECUTING;
const RobotState_State RobotState::RESULT_TX;
const RobotState_State RobotState::State_MIN;
const RobotState_State RobotState::State_MAX;
const int RobotState::State_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RobotState::kTimeFieldNumber;
const int RobotState::kMessagesSavedFieldNumber;
const int RobotState::kRobotStateFieldNumber;
const int RobotState::kNotificationsFieldNumber;
const int RobotState::kActivationEventFieldNumber;
const int RobotState::kVisitorFieldNumber;
const int RobotState::kFinalCommandFieldNumber;
const int RobotState::kDevicesSwitch1FieldNumber;
const int RobotState::kDevicesSwitch2FieldNumber;
const int RobotState::kDevicesSwitch3FieldNumber;
const int RobotState::kDevicesDimmerFieldNumber;
const int RobotState::kDevicesBlindsFieldNumber;
const int RobotState::kTabletDisplayMapFieldNumber;
const int RobotState::kGenericResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RobotState::RobotState()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:roah_rsbb_msgs.RobotState)
}

void RobotState::InitAsDefaultInstance() {
  time_ = const_cast< ::roah_rsbb_msgs::Time*>(&::roah_rsbb_msgs::Time::default_instance());
}

RobotState::RobotState(const RobotState& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:roah_rsbb_msgs.RobotState)
}

void RobotState::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  time_ = NULL;
  messages_saved_ = 0u;
  robot_state_ = 0;
  devices_switch_1_ = false;
  devices_switch_2_ = false;
  devices_switch_3_ = false;
  devices_dimmer_ = 0u;
  devices_blinds_ = 0u;
  tablet_display_map_ = false;
  generic_result_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RobotState::~RobotState() {
  // @@protoc_insertion_point(destructor:roah_rsbb_msgs.RobotState)
  SharedDtor();
}

void RobotState::SharedDtor() {
  generic_result_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete time_;
  }
}

void RobotState::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RobotState::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RobotState_descriptor_;
}

const RobotState& RobotState::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RobotState_2eproto();
  return *default_instance_;
}

RobotState* RobotState::default_instance_ = NULL;

RobotState* RobotState::New(::google::protobuf::Arena* arena) const {
  RobotState* n = new RobotState;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RobotState::Clear() {
// @@protoc_insertion_point(message_clear_start:roah_rsbb_msgs.RobotState)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(RobotState, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<RobotState*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 135u) {
    ZR_(messages_saved_, robot_state_);
    if (has_time()) {
      if (time_ != NULL) time_->::roah_rsbb_msgs::Time::Clear();
    }
    devices_switch_1_ = false;
  }
  if (_has_bits_[8 / 32] & 16128u) {
    ZR_(devices_switch_2_, devices_dimmer_);
    devices_blinds_ = 0u;
    if (has_generic_result()) {
      generic_result_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  notifications_.Clear();
  activation_event_.Clear();
  visitor_.Clear();
  final_command_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool RobotState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:roah_rsbb_msgs.RobotState)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .roah_rsbb_msgs.Time time = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_time()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_messages_saved;
        break;
      }

      // required uint32 messages_saved = 2;
      case 2: {
        if (tag == 16) {
         parse_messages_saved:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &messages_saved_)));
          set_has_messages_saved();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_robot_state;
        break;
      }

      // required .roah_rsbb_msgs.RobotState.State robot_state = 3;
      case 3: {
        if (tag == 24) {
         parse_robot_state:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::roah_rsbb_msgs::RobotState_State_IsValid(value)) {
            set_robot_state(static_cast< ::roah_rsbb_msgs::RobotState_State >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_notifications;
        break;
      }

      // repeated string notifications = 8;
      case 8: {
        if (tag == 66) {
         parse_notifications:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_notifications()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->notifications(this->notifications_size() - 1).data(),
            this->notifications(this->notifications_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "roah_rsbb_msgs.RobotState.notifications");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_notifications;
        if (input->ExpectTag(74)) goto parse_activation_event;
        break;
      }

      // repeated string activation_event = 9;
      case 9: {
        if (tag == 74) {
         parse_activation_event:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_activation_event()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->activation_event(this->activation_event_size() - 1).data(),
            this->activation_event(this->activation_event_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "roah_rsbb_msgs.RobotState.activation_event");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_activation_event;
        if (input->ExpectTag(82)) goto parse_visitor;
        break;
      }

      // repeated string visitor = 10;
      case 10: {
        if (tag == 82) {
         parse_visitor:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_visitor()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->visitor(this->visitor_size() - 1).data(),
            this->visitor(this->visitor_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "roah_rsbb_msgs.RobotState.visitor");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_visitor;
        if (input->ExpectTag(130)) goto parse_final_command;
        break;
      }

      // repeated string final_command = 16;
      case 16: {
        if (tag == 130) {
         parse_final_command:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_final_command()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->final_command(this->final_command_size() - 1).data(),
            this->final_command(this->final_command_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "roah_rsbb_msgs.RobotState.final_command");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(130)) goto parse_final_command;
        if (input->ExpectTag(136)) goto parse_devices_switch_1;
        break;
      }

      // optional bool devices_switch_1 = 17;
      case 17: {
        if (tag == 136) {
         parse_devices_switch_1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &devices_switch_1_)));
          set_has_devices_switch_1();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(144)) goto parse_devices_switch_2;
        break;
      }

      // optional bool devices_switch_2 = 18;
      case 18: {
        if (tag == 144) {
         parse_devices_switch_2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &devices_switch_2_)));
          set_has_devices_switch_2();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(152)) goto parse_devices_switch_3;
        break;
      }

      // optional bool devices_switch_3 = 19;
      case 19: {
        if (tag == 152) {
         parse_devices_switch_3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &devices_switch_3_)));
          set_has_devices_switch_3();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(160)) goto parse_devices_dimmer;
        break;
      }

      // optional uint32 devices_dimmer = 20;
      case 20: {
        if (tag == 160) {
         parse_devices_dimmer:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &devices_dimmer_)));
          set_has_devices_dimmer();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(168)) goto parse_devices_blinds;
        break;
      }

      // optional uint32 devices_blinds = 21;
      case 21: {
        if (tag == 168) {
         parse_devices_blinds:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &devices_blinds_)));
          set_has_devices_blinds();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(176)) goto parse_tablet_display_map;
        break;
      }

      // optional bool tablet_display_map = 22;
      case 22: {
        if (tag == 176) {
         parse_tablet_display_map:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &tablet_display_map_)));
          set_has_tablet_display_map();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(186)) goto parse_generic_result;
        break;
      }

      // optional string generic_result = 23;
      case 23: {
        if (tag == 186) {
         parse_generic_result:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_generic_result()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->generic_result().data(), this->generic_result().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "roah_rsbb_msgs.RobotState.generic_result");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:roah_rsbb_msgs.RobotState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:roah_rsbb_msgs.RobotState)
  return false;
#undef DO_
}

void RobotState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:roah_rsbb_msgs.RobotState)
  // required .roah_rsbb_msgs.Time time = 1;
  if (has_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->time_, output);
  }

  // required uint32 messages_saved = 2;
  if (has_messages_saved()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->messages_saved(), output);
  }

  // required .roah_rsbb_msgs.RobotState.State robot_state = 3;
  if (has_robot_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->robot_state(), output);
  }

  // repeated string notifications = 8;
  for (int i = 0; i < this->notifications_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->notifications(i).data(), this->notifications(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "roah_rsbb_msgs.RobotState.notifications");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->notifications(i), output);
  }

  // repeated string activation_event = 9;
  for (int i = 0; i < this->activation_event_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->activation_event(i).data(), this->activation_event(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "roah_rsbb_msgs.RobotState.activation_event");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->activation_event(i), output);
  }

  // repeated string visitor = 10;
  for (int i = 0; i < this->visitor_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->visitor(i).data(), this->visitor(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "roah_rsbb_msgs.RobotState.visitor");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->visitor(i), output);
  }

  // repeated string final_command = 16;
  for (int i = 0; i < this->final_command_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->final_command(i).data(), this->final_command(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "roah_rsbb_msgs.RobotState.final_command");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      16, this->final_command(i), output);
  }

  // optional bool devices_switch_1 = 17;
  if (has_devices_switch_1()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(17, this->devices_switch_1(), output);
  }

  // optional bool devices_switch_2 = 18;
  if (has_devices_switch_2()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(18, this->devices_switch_2(), output);
  }

  // optional bool devices_switch_3 = 19;
  if (has_devices_switch_3()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(19, this->devices_switch_3(), output);
  }

  // optional uint32 devices_dimmer = 20;
  if (has_devices_dimmer()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(20, this->devices_dimmer(), output);
  }

  // optional uint32 devices_blinds = 21;
  if (has_devices_blinds()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(21, this->devices_blinds(), output);
  }

  // optional bool tablet_display_map = 22;
  if (has_tablet_display_map()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(22, this->tablet_display_map(), output);
  }

  // optional string generic_result = 23;
  if (has_generic_result()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->generic_result().data(), this->generic_result().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "roah_rsbb_msgs.RobotState.generic_result");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      23, this->generic_result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:roah_rsbb_msgs.RobotState)
}

::google::protobuf::uint8* RobotState::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:roah_rsbb_msgs.RobotState)
  // required .roah_rsbb_msgs.Time time = 1;
  if (has_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->time_, false, target);
  }

  // required uint32 messages_saved = 2;
  if (has_messages_saved()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->messages_saved(), target);
  }

  // required .roah_rsbb_msgs.RobotState.State robot_state = 3;
  if (has_robot_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->robot_state(), target);
  }

  // repeated string notifications = 8;
  for (int i = 0; i < this->notifications_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->notifications(i).data(), this->notifications(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "roah_rsbb_msgs.RobotState.notifications");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(8, this->notifications(i), target);
  }

  // repeated string activation_event = 9;
  for (int i = 0; i < this->activation_event_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->activation_event(i).data(), this->activation_event(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "roah_rsbb_msgs.RobotState.activation_event");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(9, this->activation_event(i), target);
  }

  // repeated string visitor = 10;
  for (int i = 0; i < this->visitor_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->visitor(i).data(), this->visitor(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "roah_rsbb_msgs.RobotState.visitor");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(10, this->visitor(i), target);
  }

  // repeated string final_command = 16;
  for (int i = 0; i < this->final_command_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->final_command(i).data(), this->final_command(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "roah_rsbb_msgs.RobotState.final_command");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(16, this->final_command(i), target);
  }

  // optional bool devices_switch_1 = 17;
  if (has_devices_switch_1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(17, this->devices_switch_1(), target);
  }

  // optional bool devices_switch_2 = 18;
  if (has_devices_switch_2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(18, this->devices_switch_2(), target);
  }

  // optional bool devices_switch_3 = 19;
  if (has_devices_switch_3()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(19, this->devices_switch_3(), target);
  }

  // optional uint32 devices_dimmer = 20;
  if (has_devices_dimmer()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(20, this->devices_dimmer(), target);
  }

  // optional uint32 devices_blinds = 21;
  if (has_devices_blinds()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(21, this->devices_blinds(), target);
  }

  // optional bool tablet_display_map = 22;
  if (has_tablet_display_map()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(22, this->tablet_display_map(), target);
  }

  // optional string generic_result = 23;
  if (has_generic_result()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->generic_result().data(), this->generic_result().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "roah_rsbb_msgs.RobotState.generic_result");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        23, this->generic_result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:roah_rsbb_msgs.RobotState)
  return target;
}

int RobotState::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:roah_rsbb_msgs.RobotState)
  int total_size = 0;

  if (has_time()) {
    // required .roah_rsbb_msgs.Time time = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->time_);
  }

  if (has_messages_saved()) {
    // required uint32 messages_saved = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->messages_saved());
  }

  if (has_robot_state()) {
    // required .roah_rsbb_msgs.RobotState.State robot_state = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->robot_state());
  }

  return total_size;
}
int RobotState::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:roah_rsbb_msgs.RobotState)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required .roah_rsbb_msgs.Time time = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->time_);

    // required uint32 messages_saved = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->messages_saved());

    // required .roah_rsbb_msgs.RobotState.State robot_state = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->robot_state());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional bool devices_switch_1 = 17;
  if (has_devices_switch_1()) {
    total_size += 2 + 1;
  }

  if (_has_bits_[8 / 32] & 16128u) {
    // optional bool devices_switch_2 = 18;
    if (has_devices_switch_2()) {
      total_size += 2 + 1;
    }

    // optional bool devices_switch_3 = 19;
    if (has_devices_switch_3()) {
      total_size += 2 + 1;
    }

    // optional uint32 devices_dimmer = 20;
    if (has_devices_dimmer()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->devices_dimmer());
    }

    // optional uint32 devices_blinds = 21;
    if (has_devices_blinds()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->devices_blinds());
    }

    // optional bool tablet_display_map = 22;
    if (has_tablet_display_map()) {
      total_size += 2 + 1;
    }

    // optional string generic_result = 23;
    if (has_generic_result()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->generic_result());
    }

  }
  // repeated string notifications = 8;
  total_size += 1 * this->notifications_size();
  for (int i = 0; i < this->notifications_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->notifications(i));
  }

  // repeated string activation_event = 9;
  total_size += 1 * this->activation_event_size();
  for (int i = 0; i < this->activation_event_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->activation_event(i));
  }

  // repeated string visitor = 10;
  total_size += 1 * this->visitor_size();
  for (int i = 0; i < this->visitor_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->visitor(i));
  }

  // repeated string final_command = 16;
  total_size += 2 * this->final_command_size();
  for (int i = 0; i < this->final_command_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->final_command(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RobotState::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:roah_rsbb_msgs.RobotState)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const RobotState* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RobotState>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:roah_rsbb_msgs.RobotState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:roah_rsbb_msgs.RobotState)
    MergeFrom(*source);
  }
}

void RobotState::MergeFrom(const RobotState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:roah_rsbb_msgs.RobotState)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  notifications_.MergeFrom(from.notifications_);
  activation_event_.MergeFrom(from.activation_event_);
  visitor_.MergeFrom(from.visitor_);
  final_command_.MergeFrom(from.final_command_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_time()) {
      mutable_time()->::roah_rsbb_msgs::Time::MergeFrom(from.time());
    }
    if (from.has_messages_saved()) {
      set_messages_saved(from.messages_saved());
    }
    if (from.has_robot_state()) {
      set_robot_state(from.robot_state());
    }
    if (from.has_devices_switch_1()) {
      set_devices_switch_1(from.devices_switch_1());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_devices_switch_2()) {
      set_devices_switch_2(from.devices_switch_2());
    }
    if (from.has_devices_switch_3()) {
      set_devices_switch_3(from.devices_switch_3());
    }
    if (from.has_devices_dimmer()) {
      set_devices_dimmer(from.devices_dimmer());
    }
    if (from.has_devices_blinds()) {
      set_devices_blinds(from.devices_blinds());
    }
    if (from.has_tablet_display_map()) {
      set_tablet_display_map(from.tablet_display_map());
    }
    if (from.has_generic_result()) {
      set_has_generic_result();
      generic_result_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.generic_result_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void RobotState::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:roah_rsbb_msgs.RobotState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RobotState::CopyFrom(const RobotState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:roah_rsbb_msgs.RobotState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RobotState::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  if (has_time()) {
    if (!this->time_->IsInitialized()) return false;
  }
  return true;
}

void RobotState::Swap(RobotState* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RobotState::InternalSwap(RobotState* other) {
  std::swap(time_, other->time_);
  std::swap(messages_saved_, other->messages_saved_);
  std::swap(robot_state_, other->robot_state_);
  notifications_.UnsafeArenaSwap(&other->notifications_);
  activation_event_.UnsafeArenaSwap(&other->activation_event_);
  visitor_.UnsafeArenaSwap(&other->visitor_);
  final_command_.UnsafeArenaSwap(&other->final_command_);
  std::swap(devices_switch_1_, other->devices_switch_1_);
  std::swap(devices_switch_2_, other->devices_switch_2_);
  std::swap(devices_switch_3_, other->devices_switch_3_);
  std::swap(devices_dimmer_, other->devices_dimmer_);
  std::swap(devices_blinds_, other->devices_blinds_);
  std::swap(tablet_display_map_, other->tablet_display_map_);
  generic_result_.Swap(&other->generic_result_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RobotState::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RobotState_descriptor_;
  metadata.reflection = RobotState_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RobotState

// required .roah_rsbb_msgs.Time time = 1;
bool RobotState::has_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RobotState::set_has_time() {
  _has_bits_[0] |= 0x00000001u;
}
void RobotState::clear_has_time() {
  _has_bits_[0] &= ~0x00000001u;
}
void RobotState::clear_time() {
  if (time_ != NULL) time_->::roah_rsbb_msgs::Time::Clear();
  clear_has_time();
}
const ::roah_rsbb_msgs::Time& RobotState::time() const {
  // @@protoc_insertion_point(field_get:roah_rsbb_msgs.RobotState.time)
  return time_ != NULL ? *time_ : *default_instance_->time_;
}
::roah_rsbb_msgs::Time* RobotState::mutable_time() {
  set_has_time();
  if (time_ == NULL) {
    time_ = new ::roah_rsbb_msgs::Time;
  }
  // @@protoc_insertion_point(field_mutable:roah_rsbb_msgs.RobotState.time)
  return time_;
}
::roah_rsbb_msgs::Time* RobotState::release_time() {
  // @@protoc_insertion_point(field_release:roah_rsbb_msgs.RobotState.time)
  clear_has_time();
  ::roah_rsbb_msgs::Time* temp = time_;
  time_ = NULL;
  return temp;
}
void RobotState::set_allocated_time(::roah_rsbb_msgs::Time* time) {
  delete time_;
  time_ = time;
  if (time) {
    set_has_time();
  } else {
    clear_has_time();
  }
  // @@protoc_insertion_point(field_set_allocated:roah_rsbb_msgs.RobotState.time)
}

// required uint32 messages_saved = 2;
bool RobotState::has_messages_saved() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void RobotState::set_has_messages_saved() {
  _has_bits_[0] |= 0x00000002u;
}
void RobotState::clear_has_messages_saved() {
  _has_bits_[0] &= ~0x00000002u;
}
void RobotState::clear_messages_saved() {
  messages_saved_ = 0u;
  clear_has_messages_saved();
}
 ::google::protobuf::uint32 RobotState::messages_saved() const {
  // @@protoc_insertion_point(field_get:roah_rsbb_msgs.RobotState.messages_saved)
  return messages_saved_;
}
 void RobotState::set_messages_saved(::google::protobuf::uint32 value) {
  set_has_messages_saved();
  messages_saved_ = value;
  // @@protoc_insertion_point(field_set:roah_rsbb_msgs.RobotState.messages_saved)
}

// required .roah_rsbb_msgs.RobotState.State robot_state = 3;
bool RobotState::has_robot_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void RobotState::set_has_robot_state() {
  _has_bits_[0] |= 0x00000004u;
}
void RobotState::clear_has_robot_state() {
  _has_bits_[0] &= ~0x00000004u;
}
void RobotState::clear_robot_state() {
  robot_state_ = 0;
  clear_has_robot_state();
}
 ::roah_rsbb_msgs::RobotState_State RobotState::robot_state() const {
  // @@protoc_insertion_point(field_get:roah_rsbb_msgs.RobotState.robot_state)
  return static_cast< ::roah_rsbb_msgs::RobotState_State >(robot_state_);
}
 void RobotState::set_robot_state(::roah_rsbb_msgs::RobotState_State value) {
  assert(::roah_rsbb_msgs::RobotState_State_IsValid(value));
  set_has_robot_state();
  robot_state_ = value;
  // @@protoc_insertion_point(field_set:roah_rsbb_msgs.RobotState.robot_state)
}

// repeated string notifications = 8;
int RobotState::notifications_size() const {
  return notifications_.size();
}
void RobotState::clear_notifications() {
  notifications_.Clear();
}
 const ::std::string& RobotState::notifications(int index) const {
  // @@protoc_insertion_point(field_get:roah_rsbb_msgs.RobotState.notifications)
  return notifications_.Get(index);
}
 ::std::string* RobotState::mutable_notifications(int index) {
  // @@protoc_insertion_point(field_mutable:roah_rsbb_msgs.RobotState.notifications)
  return notifications_.Mutable(index);
}
 void RobotState::set_notifications(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:roah_rsbb_msgs.RobotState.notifications)
  notifications_.Mutable(index)->assign(value);
}
 void RobotState::set_notifications(int index, const char* value) {
  notifications_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:roah_rsbb_msgs.RobotState.notifications)
}
 void RobotState::set_notifications(int index, const char* value, size_t size) {
  notifications_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:roah_rsbb_msgs.RobotState.notifications)
}
 ::std::string* RobotState::add_notifications() {
  // @@protoc_insertion_point(field_add_mutable:roah_rsbb_msgs.RobotState.notifications)
  return notifications_.Add();
}
 void RobotState::add_notifications(const ::std::string& value) {
  notifications_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:roah_rsbb_msgs.RobotState.notifications)
}
 void RobotState::add_notifications(const char* value) {
  notifications_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:roah_rsbb_msgs.RobotState.notifications)
}
 void RobotState::add_notifications(const char* value, size_t size) {
  notifications_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:roah_rsbb_msgs.RobotState.notifications)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
RobotState::notifications() const {
  // @@protoc_insertion_point(field_list:roah_rsbb_msgs.RobotState.notifications)
  return notifications_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
RobotState::mutable_notifications() {
  // @@protoc_insertion_point(field_mutable_list:roah_rsbb_msgs.RobotState.notifications)
  return &notifications_;
}

// repeated string activation_event = 9;
int RobotState::activation_event_size() const {
  return activation_event_.size();
}
void RobotState::clear_activation_event() {
  activation_event_.Clear();
}
 const ::std::string& RobotState::activation_event(int index) const {
  // @@protoc_insertion_point(field_get:roah_rsbb_msgs.RobotState.activation_event)
  return activation_event_.Get(index);
}
 ::std::string* RobotState::mutable_activation_event(int index) {
  // @@protoc_insertion_point(field_mutable:roah_rsbb_msgs.RobotState.activation_event)
  return activation_event_.Mutable(index);
}
 void RobotState::set_activation_event(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:roah_rsbb_msgs.RobotState.activation_event)
  activation_event_.Mutable(index)->assign(value);
}
 void RobotState::set_activation_event(int index, const char* value) {
  activation_event_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:roah_rsbb_msgs.RobotState.activation_event)
}
 void RobotState::set_activation_event(int index, const char* value, size_t size) {
  activation_event_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:roah_rsbb_msgs.RobotState.activation_event)
}
 ::std::string* RobotState::add_activation_event() {
  // @@protoc_insertion_point(field_add_mutable:roah_rsbb_msgs.RobotState.activation_event)
  return activation_event_.Add();
}
 void RobotState::add_activation_event(const ::std::string& value) {
  activation_event_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:roah_rsbb_msgs.RobotState.activation_event)
}
 void RobotState::add_activation_event(const char* value) {
  activation_event_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:roah_rsbb_msgs.RobotState.activation_event)
}
 void RobotState::add_activation_event(const char* value, size_t size) {
  activation_event_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:roah_rsbb_msgs.RobotState.activation_event)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
RobotState::activation_event() const {
  // @@protoc_insertion_point(field_list:roah_rsbb_msgs.RobotState.activation_event)
  return activation_event_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
RobotState::mutable_activation_event() {
  // @@protoc_insertion_point(field_mutable_list:roah_rsbb_msgs.RobotState.activation_event)
  return &activation_event_;
}

// repeated string visitor = 10;
int RobotState::visitor_size() const {
  return visitor_.size();
}
void RobotState::clear_visitor() {
  visitor_.Clear();
}
 const ::std::string& RobotState::visitor(int index) const {
  // @@protoc_insertion_point(field_get:roah_rsbb_msgs.RobotState.visitor)
  return visitor_.Get(index);
}
 ::std::string* RobotState::mutable_visitor(int index) {
  // @@protoc_insertion_point(field_mutable:roah_rsbb_msgs.RobotState.visitor)
  return visitor_.Mutable(index);
}
 void RobotState::set_visitor(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:roah_rsbb_msgs.RobotState.visitor)
  visitor_.Mutable(index)->assign(value);
}
 void RobotState::set_visitor(int index, const char* value) {
  visitor_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:roah_rsbb_msgs.RobotState.visitor)
}
 void RobotState::set_visitor(int index, const char* value, size_t size) {
  visitor_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:roah_rsbb_msgs.RobotState.visitor)
}
 ::std::string* RobotState::add_visitor() {
  // @@protoc_insertion_point(field_add_mutable:roah_rsbb_msgs.RobotState.visitor)
  return visitor_.Add();
}
 void RobotState::add_visitor(const ::std::string& value) {
  visitor_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:roah_rsbb_msgs.RobotState.visitor)
}
 void RobotState::add_visitor(const char* value) {
  visitor_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:roah_rsbb_msgs.RobotState.visitor)
}
 void RobotState::add_visitor(const char* value, size_t size) {
  visitor_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:roah_rsbb_msgs.RobotState.visitor)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
RobotState::visitor() const {
  // @@protoc_insertion_point(field_list:roah_rsbb_msgs.RobotState.visitor)
  return visitor_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
RobotState::mutable_visitor() {
  // @@protoc_insertion_point(field_mutable_list:roah_rsbb_msgs.RobotState.visitor)
  return &visitor_;
}

// repeated string final_command = 16;
int RobotState::final_command_size() const {
  return final_command_.size();
}
void RobotState::clear_final_command() {
  final_command_.Clear();
}
 const ::std::string& RobotState::final_command(int index) const {
  // @@protoc_insertion_point(field_get:roah_rsbb_msgs.RobotState.final_command)
  return final_command_.Get(index);
}
 ::std::string* RobotState::mutable_final_command(int index) {
  // @@protoc_insertion_point(field_mutable:roah_rsbb_msgs.RobotState.final_command)
  return final_command_.Mutable(index);
}
 void RobotState::set_final_command(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:roah_rsbb_msgs.RobotState.final_command)
  final_command_.Mutable(index)->assign(value);
}
 void RobotState::set_final_command(int index, const char* value) {
  final_command_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:roah_rsbb_msgs.RobotState.final_command)
}
 void RobotState::set_final_command(int index, const char* value, size_t size) {
  final_command_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:roah_rsbb_msgs.RobotState.final_command)
}
 ::std::string* RobotState::add_final_command() {
  // @@protoc_insertion_point(field_add_mutable:roah_rsbb_msgs.RobotState.final_command)
  return final_command_.Add();
}
 void RobotState::add_final_command(const ::std::string& value) {
  final_command_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:roah_rsbb_msgs.RobotState.final_command)
}
 void RobotState::add_final_command(const char* value) {
  final_command_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:roah_rsbb_msgs.RobotState.final_command)
}
 void RobotState::add_final_command(const char* value, size_t size) {
  final_command_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:roah_rsbb_msgs.RobotState.final_command)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
RobotState::final_command() const {
  // @@protoc_insertion_point(field_list:roah_rsbb_msgs.RobotState.final_command)
  return final_command_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
RobotState::mutable_final_command() {
  // @@protoc_insertion_point(field_mutable_list:roah_rsbb_msgs.RobotState.final_command)
  return &final_command_;
}

// optional bool devices_switch_1 = 17;
bool RobotState::has_devices_switch_1() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void RobotState::set_has_devices_switch_1() {
  _has_bits_[0] |= 0x00000080u;
}
void RobotState::clear_has_devices_switch_1() {
  _has_bits_[0] &= ~0x00000080u;
}
void RobotState::clear_devices_switch_1() {
  devices_switch_1_ = false;
  clear_has_devices_switch_1();
}
 bool RobotState::devices_switch_1() const {
  // @@protoc_insertion_point(field_get:roah_rsbb_msgs.RobotState.devices_switch_1)
  return devices_switch_1_;
}
 void RobotState::set_devices_switch_1(bool value) {
  set_has_devices_switch_1();
  devices_switch_1_ = value;
  // @@protoc_insertion_point(field_set:roah_rsbb_msgs.RobotState.devices_switch_1)
}

// optional bool devices_switch_2 = 18;
bool RobotState::has_devices_switch_2() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void RobotState::set_has_devices_switch_2() {
  _has_bits_[0] |= 0x00000100u;
}
void RobotState::clear_has_devices_switch_2() {
  _has_bits_[0] &= ~0x00000100u;
}
void RobotState::clear_devices_switch_2() {
  devices_switch_2_ = false;
  clear_has_devices_switch_2();
}
 bool RobotState::devices_switch_2() const {
  // @@protoc_insertion_point(field_get:roah_rsbb_msgs.RobotState.devices_switch_2)
  return devices_switch_2_;
}
 void RobotState::set_devices_switch_2(bool value) {
  set_has_devices_switch_2();
  devices_switch_2_ = value;
  // @@protoc_insertion_point(field_set:roah_rsbb_msgs.RobotState.devices_switch_2)
}

// optional bool devices_switch_3 = 19;
bool RobotState::has_devices_switch_3() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void RobotState::set_has_devices_switch_3() {
  _has_bits_[0] |= 0x00000200u;
}
void RobotState::clear_has_devices_switch_3() {
  _has_bits_[0] &= ~0x00000200u;
}
void RobotState::clear_devices_switch_3() {
  devices_switch_3_ = false;
  clear_has_devices_switch_3();
}
 bool RobotState::devices_switch_3() const {
  // @@protoc_insertion_point(field_get:roah_rsbb_msgs.RobotState.devices_switch_3)
  return devices_switch_3_;
}
 void RobotState::set_devices_switch_3(bool value) {
  set_has_devices_switch_3();
  devices_switch_3_ = value;
  // @@protoc_insertion_point(field_set:roah_rsbb_msgs.RobotState.devices_switch_3)
}

// optional uint32 devices_dimmer = 20;
bool RobotState::has_devices_dimmer() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void RobotState::set_has_devices_dimmer() {
  _has_bits_[0] |= 0x00000400u;
}
void RobotState::clear_has_devices_dimmer() {
  _has_bits_[0] &= ~0x00000400u;
}
void RobotState::clear_devices_dimmer() {
  devices_dimmer_ = 0u;
  clear_has_devices_dimmer();
}
 ::google::protobuf::uint32 RobotState::devices_dimmer() const {
  // @@protoc_insertion_point(field_get:roah_rsbb_msgs.RobotState.devices_dimmer)
  return devices_dimmer_;
}
 void RobotState::set_devices_dimmer(::google::protobuf::uint32 value) {
  set_has_devices_dimmer();
  devices_dimmer_ = value;
  // @@protoc_insertion_point(field_set:roah_rsbb_msgs.RobotState.devices_dimmer)
}

// optional uint32 devices_blinds = 21;
bool RobotState::has_devices_blinds() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void RobotState::set_has_devices_blinds() {
  _has_bits_[0] |= 0x00000800u;
}
void RobotState::clear_has_devices_blinds() {
  _has_bits_[0] &= ~0x00000800u;
}
void RobotState::clear_devices_blinds() {
  devices_blinds_ = 0u;
  clear_has_devices_blinds();
}
 ::google::protobuf::uint32 RobotState::devices_blinds() const {
  // @@protoc_insertion_point(field_get:roah_rsbb_msgs.RobotState.devices_blinds)
  return devices_blinds_;
}
 void RobotState::set_devices_blinds(::google::protobuf::uint32 value) {
  set_has_devices_blinds();
  devices_blinds_ = value;
  // @@protoc_insertion_point(field_set:roah_rsbb_msgs.RobotState.devices_blinds)
}

// optional bool tablet_display_map = 22;
bool RobotState::has_tablet_display_map() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void RobotState::set_has_tablet_display_map() {
  _has_bits_[0] |= 0x00001000u;
}
void RobotState::clear_has_tablet_display_map() {
  _has_bits_[0] &= ~0x00001000u;
}
void RobotState::clear_tablet_display_map() {
  tablet_display_map_ = false;
  clear_has_tablet_display_map();
}
 bool RobotState::tablet_display_map() const {
  // @@protoc_insertion_point(field_get:roah_rsbb_msgs.RobotState.tablet_display_map)
  return tablet_display_map_;
}
 void RobotState::set_tablet_display_map(bool value) {
  set_has_tablet_display_map();
  tablet_display_map_ = value;
  // @@protoc_insertion_point(field_set:roah_rsbb_msgs.RobotState.tablet_display_map)
}

// optional string generic_result = 23;
bool RobotState::has_generic_result() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void RobotState::set_has_generic_result() {
  _has_bits_[0] |= 0x00002000u;
}
void RobotState::clear_has_generic_result() {
  _has_bits_[0] &= ~0x00002000u;
}
void RobotState::clear_generic_result() {
  generic_result_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_generic_result();
}
 const ::std::string& RobotState::generic_result() const {
  // @@protoc_insertion_point(field_get:roah_rsbb_msgs.RobotState.generic_result)
  return generic_result_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void RobotState::set_generic_result(const ::std::string& value) {
  set_has_generic_result();
  generic_result_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:roah_rsbb_msgs.RobotState.generic_result)
}
 void RobotState::set_generic_result(const char* value) {
  set_has_generic_result();
  generic_result_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:roah_rsbb_msgs.RobotState.generic_result)
}
 void RobotState::set_generic_result(const char* value, size_t size) {
  set_has_generic_result();
  generic_result_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:roah_rsbb_msgs.RobotState.generic_result)
}
 ::std::string* RobotState::mutable_generic_result() {
  set_has_generic_result();
  // @@protoc_insertion_point(field_mutable:roah_rsbb_msgs.RobotState.generic_result)
  return generic_result_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* RobotState::release_generic_result() {
  // @@protoc_insertion_point(field_release:roah_rsbb_msgs.RobotState.generic_result)
  clear_has_generic_result();
  return generic_result_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void RobotState::set_allocated_generic_result(::std::string* generic_result) {
  if (generic_result != NULL) {
    set_has_generic_result();
  } else {
    clear_has_generic_result();
  }
  generic_result_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), generic_result);
  // @@protoc_insertion_point(field_set_allocated:roah_rsbb_msgs.RobotState.generic_result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace roah_rsbb_msgs

// @@protoc_insertion_point(global_scope)
