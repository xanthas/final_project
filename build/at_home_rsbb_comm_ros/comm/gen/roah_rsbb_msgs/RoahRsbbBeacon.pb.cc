// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: RoahRsbbBeacon.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "RoahRsbbBeacon.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace roah_rsbb_msgs {

namespace {

const ::google::protobuf::Descriptor* RoahRsbbBeacon_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RoahRsbbBeacon_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* RoahRsbbBeacon_CompType_descriptor_ = NULL;
const ::google::protobuf::Descriptor* BenchmarkingTeam_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BenchmarkingTeam_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* BenchmarkingTeam_CompType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_RoahRsbbBeacon_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_RoahRsbbBeacon_2eproto() {
  protobuf_AddDesc_RoahRsbbBeacon_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "RoahRsbbBeacon.proto");
  GOOGLE_CHECK(file != NULL);
  RoahRsbbBeacon_descriptor_ = file->message_type(0);
  static const int RoahRsbbBeacon_offsets_[13] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoahRsbbBeacon, benchmarking_teams_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoahRsbbBeacon, devices_bell_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoahRsbbBeacon, devices_switch_1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoahRsbbBeacon, devices_switch_2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoahRsbbBeacon, devices_switch_3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoahRsbbBeacon, devices_dimmer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoahRsbbBeacon, devices_blinds_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoahRsbbBeacon, devices_door_win_detect_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoahRsbbBeacon, tablet_display_map_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoahRsbbBeacon, tablet_call_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoahRsbbBeacon, tablet_position_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoahRsbbBeacon, tablet_position_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoahRsbbBeacon, tablet_position_y_),
  };
  RoahRsbbBeacon_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RoahRsbbBeacon_descriptor_,
      RoahRsbbBeacon::default_instance_,
      RoahRsbbBeacon_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoahRsbbBeacon, _has_bits_[0]),
      -1,
      -1,
      sizeof(RoahRsbbBeacon),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoahRsbbBeacon, _internal_metadata_),
      -1);
  RoahRsbbBeacon_CompType_descriptor_ = RoahRsbbBeacon_descriptor_->enum_type(0);
  BenchmarkingTeam_descriptor_ = file->message_type(1);
  static const int BenchmarkingTeam_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BenchmarkingTeam, team_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BenchmarkingTeam, robot_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BenchmarkingTeam, rsbb_port_),
  };
  BenchmarkingTeam_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BenchmarkingTeam_descriptor_,
      BenchmarkingTeam::default_instance_,
      BenchmarkingTeam_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BenchmarkingTeam, _has_bits_[0]),
      -1,
      -1,
      sizeof(BenchmarkingTeam),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BenchmarkingTeam, _internal_metadata_),
      -1);
  BenchmarkingTeam_CompType_descriptor_ = BenchmarkingTeam_descriptor_->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_RoahRsbbBeacon_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RoahRsbbBeacon_descriptor_, &RoahRsbbBeacon::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BenchmarkingTeam_descriptor_, &BenchmarkingTeam::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_RoahRsbbBeacon_2eproto() {
  delete RoahRsbbBeacon::default_instance_;
  delete RoahRsbbBeacon_reflection_;
  delete BenchmarkingTeam::default_instance_;
  delete BenchmarkingTeam_reflection_;
}

void protobuf_AddDesc_RoahRsbbBeacon_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_RoahRsbbBeacon_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::roah_rsbb_msgs::protobuf_AddDesc_Time_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024RoahRsbbBeacon.proto\022\016roah_rsbb_msgs\032\n"
    "Time.proto\"\367\003\n\016RoahRsbbBeacon\022<\n\022benchma"
    "rking_teams\030\001 \003(\0132 .roah_rsbb_msgs.Bench"
    "markingTeam\022*\n\014devices_bell\030\n \002(\0132\024.roah"
    "_rsbb_msgs.Time\022\030\n\020devices_switch_1\030\013 \002("
    "\010\022\030\n\020devices_switch_2\030\014 \002(\010\022\030\n\020devices_s"
    "witch_3\030\r \002(\010\022\026\n\016devices_dimmer\030\016 \002(\r\022\026\n"
    "\016devices_blinds\030\017 \002(\r\022\037\n\027devices_door_wi"
    "n_detect\030\020 \002(\010\022\032\n\022tablet_display_map\030\024 \002"
    "(\010\022.\n\020tablet_call_time\030\025 \002(\0132\024.roah_rsbb"
    "_msgs.Time\0222\n\024tablet_position_time\030\026 \002(\013"
    "2\024.roah_rsbb_msgs.Time\022\031\n\021tablet_positio"
    "n_x\030\027 \002(\001\022\031\n\021tablet_position_y\030\030 \002(\001\"&\n\010"
    "CompType\022\014\n\007COMP_ID\020\2124\022\014\n\010MSG_TYPE\020\n\"t\n\020"
    "BenchmarkingTeam\022\021\n\tteam_name\030\001 \002(\t\022\022\n\nr"
    "obot_name\030\002 \002(\t\022\021\n\trsbb_port\030\003 \002(\r\"&\n\010Co"
    "mpType\022\014\n\007COMP_ID\020\2124\022\014\n\010MSG_TYPE\020\013B0\n\030eu"
    ".rockin.roah_rsbb_msgsB\024RoahRsbbBeaconPr"
    "otos", 724);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "RoahRsbbBeacon.proto", &protobuf_RegisterTypes);
  RoahRsbbBeacon::default_instance_ = new RoahRsbbBeacon();
  BenchmarkingTeam::default_instance_ = new BenchmarkingTeam();
  RoahRsbbBeacon::default_instance_->InitAsDefaultInstance();
  BenchmarkingTeam::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_RoahRsbbBeacon_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_RoahRsbbBeacon_2eproto {
  StaticDescriptorInitializer_RoahRsbbBeacon_2eproto() {
    protobuf_AddDesc_RoahRsbbBeacon_2eproto();
  }
} static_descriptor_initializer_RoahRsbbBeacon_2eproto_;

// ===================================================================

const ::google::protobuf::EnumDescriptor* RoahRsbbBeacon_CompType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RoahRsbbBeacon_CompType_descriptor_;
}
bool RoahRsbbBeacon_CompType_IsValid(int value) {
  switch(value) {
    case 10:
    case 6666:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const RoahRsbbBeacon_CompType RoahRsbbBeacon::COMP_ID;
const RoahRsbbBeacon_CompType RoahRsbbBeacon::MSG_TYPE;
const RoahRsbbBeacon_CompType RoahRsbbBeacon::CompType_MIN;
const RoahRsbbBeacon_CompType RoahRsbbBeacon::CompType_MAX;
const int RoahRsbbBeacon::CompType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoahRsbbBeacon::kBenchmarkingTeamsFieldNumber;
const int RoahRsbbBeacon::kDevicesBellFieldNumber;
const int RoahRsbbBeacon::kDevicesSwitch1FieldNumber;
const int RoahRsbbBeacon::kDevicesSwitch2FieldNumber;
const int RoahRsbbBeacon::kDevicesSwitch3FieldNumber;
const int RoahRsbbBeacon::kDevicesDimmerFieldNumber;
const int RoahRsbbBeacon::kDevicesBlindsFieldNumber;
const int RoahRsbbBeacon::kDevicesDoorWinDetectFieldNumber;
const int RoahRsbbBeacon::kTabletDisplayMapFieldNumber;
const int RoahRsbbBeacon::kTabletCallTimeFieldNumber;
const int RoahRsbbBeacon::kTabletPositionTimeFieldNumber;
const int RoahRsbbBeacon::kTabletPositionXFieldNumber;
const int RoahRsbbBeacon::kTabletPositionYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoahRsbbBeacon::RoahRsbbBeacon()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:roah_rsbb_msgs.RoahRsbbBeacon)
}

void RoahRsbbBeacon::InitAsDefaultInstance() {
  devices_bell_ = const_cast< ::roah_rsbb_msgs::Time*>(&::roah_rsbb_msgs::Time::default_instance());
  tablet_call_time_ = const_cast< ::roah_rsbb_msgs::Time*>(&::roah_rsbb_msgs::Time::default_instance());
  tablet_position_time_ = const_cast< ::roah_rsbb_msgs::Time*>(&::roah_rsbb_msgs::Time::default_instance());
}

RoahRsbbBeacon::RoahRsbbBeacon(const RoahRsbbBeacon& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:roah_rsbb_msgs.RoahRsbbBeacon)
}

void RoahRsbbBeacon::SharedCtor() {
  _cached_size_ = 0;
  devices_bell_ = NULL;
  devices_switch_1_ = false;
  devices_switch_2_ = false;
  devices_switch_3_ = false;
  devices_dimmer_ = 0u;
  devices_blinds_ = 0u;
  devices_door_win_detect_ = false;
  tablet_display_map_ = false;
  tablet_call_time_ = NULL;
  tablet_position_time_ = NULL;
  tablet_position_x_ = 0;
  tablet_position_y_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RoahRsbbBeacon::~RoahRsbbBeacon() {
  // @@protoc_insertion_point(destructor:roah_rsbb_msgs.RoahRsbbBeacon)
  SharedDtor();
}

void RoahRsbbBeacon::SharedDtor() {
  if (this != default_instance_) {
    delete devices_bell_;
    delete tablet_call_time_;
    delete tablet_position_time_;
  }
}

void RoahRsbbBeacon::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoahRsbbBeacon::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RoahRsbbBeacon_descriptor_;
}

const RoahRsbbBeacon& RoahRsbbBeacon::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RoahRsbbBeacon_2eproto();
  return *default_instance_;
}

RoahRsbbBeacon* RoahRsbbBeacon::default_instance_ = NULL;

RoahRsbbBeacon* RoahRsbbBeacon::New(::google::protobuf::Arena* arena) const {
  RoahRsbbBeacon* n = new RoahRsbbBeacon;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoahRsbbBeacon::Clear() {
// @@protoc_insertion_point(message_clear_start:roah_rsbb_msgs.RoahRsbbBeacon)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(RoahRsbbBeacon, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<RoahRsbbBeacon*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 254u) {
    ZR_(devices_switch_1_, devices_blinds_);
    if (has_devices_bell()) {
      if (devices_bell_ != NULL) devices_bell_->::roah_rsbb_msgs::Time::Clear();
    }
  }
  if (_has_bits_[8 / 32] & 7936u) {
    ZR_(tablet_position_x_, tablet_position_y_);
    tablet_display_map_ = false;
    if (has_tablet_call_time()) {
      if (tablet_call_time_ != NULL) tablet_call_time_->::roah_rsbb_msgs::Time::Clear();
    }
    if (has_tablet_position_time()) {
      if (tablet_position_time_ != NULL) tablet_position_time_->::roah_rsbb_msgs::Time::Clear();
    }
  }

#undef ZR_HELPER_
#undef ZR_

  benchmarking_teams_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool RoahRsbbBeacon::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:roah_rsbb_msgs.RoahRsbbBeacon)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .roah_rsbb_msgs.BenchmarkingTeam benchmarking_teams = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_benchmarking_teams:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_benchmarking_teams()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_benchmarking_teams;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(82)) goto parse_devices_bell;
        break;
      }

      // required .roah_rsbb_msgs.Time devices_bell = 10;
      case 10: {
        if (tag == 82) {
         parse_devices_bell:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_devices_bell()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_devices_switch_1;
        break;
      }

      // required bool devices_switch_1 = 11;
      case 11: {
        if (tag == 88) {
         parse_devices_switch_1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &devices_switch_1_)));
          set_has_devices_switch_1();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_devices_switch_2;
        break;
      }

      // required bool devices_switch_2 = 12;
      case 12: {
        if (tag == 96) {
         parse_devices_switch_2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &devices_switch_2_)));
          set_has_devices_switch_2();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_devices_switch_3;
        break;
      }

      // required bool devices_switch_3 = 13;
      case 13: {
        if (tag == 104) {
         parse_devices_switch_3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &devices_switch_3_)));
          set_has_devices_switch_3();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_devices_dimmer;
        break;
      }

      // required uint32 devices_dimmer = 14;
      case 14: {
        if (tag == 112) {
         parse_devices_dimmer:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &devices_dimmer_)));
          set_has_devices_dimmer();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(120)) goto parse_devices_blinds;
        break;
      }

      // required uint32 devices_blinds = 15;
      case 15: {
        if (tag == 120) {
         parse_devices_blinds:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &devices_blinds_)));
          set_has_devices_blinds();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(128)) goto parse_devices_door_win_detect;
        break;
      }

      // required bool devices_door_win_detect = 16;
      case 16: {
        if (tag == 128) {
         parse_devices_door_win_detect:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &devices_door_win_detect_)));
          set_has_devices_door_win_detect();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(160)) goto parse_tablet_display_map;
        break;
      }

      // required bool tablet_display_map = 20;
      case 20: {
        if (tag == 160) {
         parse_tablet_display_map:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &tablet_display_map_)));
          set_has_tablet_display_map();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(170)) goto parse_tablet_call_time;
        break;
      }

      // required .roah_rsbb_msgs.Time tablet_call_time = 21;
      case 21: {
        if (tag == 170) {
         parse_tablet_call_time:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_tablet_call_time()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(178)) goto parse_tablet_position_time;
        break;
      }

      // required .roah_rsbb_msgs.Time tablet_position_time = 22;
      case 22: {
        if (tag == 178) {
         parse_tablet_position_time:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_tablet_position_time()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(185)) goto parse_tablet_position_x;
        break;
      }

      // required double tablet_position_x = 23;
      case 23: {
        if (tag == 185) {
         parse_tablet_position_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &tablet_position_x_)));
          set_has_tablet_position_x();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(193)) goto parse_tablet_position_y;
        break;
      }

      // required double tablet_position_y = 24;
      case 24: {
        if (tag == 193) {
         parse_tablet_position_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &tablet_position_y_)));
          set_has_tablet_position_y();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:roah_rsbb_msgs.RoahRsbbBeacon)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:roah_rsbb_msgs.RoahRsbbBeacon)
  return false;
#undef DO_
}

void RoahRsbbBeacon::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:roah_rsbb_msgs.RoahRsbbBeacon)
  // repeated .roah_rsbb_msgs.BenchmarkingTeam benchmarking_teams = 1;
  for (unsigned int i = 0, n = this->benchmarking_teams_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->benchmarking_teams(i), output);
  }

  // required .roah_rsbb_msgs.Time devices_bell = 10;
  if (has_devices_bell()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *this->devices_bell_, output);
  }

  // required bool devices_switch_1 = 11;
  if (has_devices_switch_1()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->devices_switch_1(), output);
  }

  // required bool devices_switch_2 = 12;
  if (has_devices_switch_2()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->devices_switch_2(), output);
  }

  // required bool devices_switch_3 = 13;
  if (has_devices_switch_3()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(13, this->devices_switch_3(), output);
  }

  // required uint32 devices_dimmer = 14;
  if (has_devices_dimmer()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->devices_dimmer(), output);
  }

  // required uint32 devices_blinds = 15;
  if (has_devices_blinds()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->devices_blinds(), output);
  }

  // required bool devices_door_win_detect = 16;
  if (has_devices_door_win_detect()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(16, this->devices_door_win_detect(), output);
  }

  // required bool tablet_display_map = 20;
  if (has_tablet_display_map()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(20, this->tablet_display_map(), output);
  }

  // required .roah_rsbb_msgs.Time tablet_call_time = 21;
  if (has_tablet_call_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21, *this->tablet_call_time_, output);
  }

  // required .roah_rsbb_msgs.Time tablet_position_time = 22;
  if (has_tablet_position_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      22, *this->tablet_position_time_, output);
  }

  // required double tablet_position_x = 23;
  if (has_tablet_position_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(23, this->tablet_position_x(), output);
  }

  // required double tablet_position_y = 24;
  if (has_tablet_position_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(24, this->tablet_position_y(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:roah_rsbb_msgs.RoahRsbbBeacon)
}

::google::protobuf::uint8* RoahRsbbBeacon::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:roah_rsbb_msgs.RoahRsbbBeacon)
  // repeated .roah_rsbb_msgs.BenchmarkingTeam benchmarking_teams = 1;
  for (unsigned int i = 0, n = this->benchmarking_teams_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->benchmarking_teams(i), false, target);
  }

  // required .roah_rsbb_msgs.Time devices_bell = 10;
  if (has_devices_bell()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, *this->devices_bell_, false, target);
  }

  // required bool devices_switch_1 = 11;
  if (has_devices_switch_1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->devices_switch_1(), target);
  }

  // required bool devices_switch_2 = 12;
  if (has_devices_switch_2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(12, this->devices_switch_2(), target);
  }

  // required bool devices_switch_3 = 13;
  if (has_devices_switch_3()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(13, this->devices_switch_3(), target);
  }

  // required uint32 devices_dimmer = 14;
  if (has_devices_dimmer()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->devices_dimmer(), target);
  }

  // required uint32 devices_blinds = 15;
  if (has_devices_blinds()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->devices_blinds(), target);
  }

  // required bool devices_door_win_detect = 16;
  if (has_devices_door_win_detect()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(16, this->devices_door_win_detect(), target);
  }

  // required bool tablet_display_map = 20;
  if (has_tablet_display_map()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(20, this->tablet_display_map(), target);
  }

  // required .roah_rsbb_msgs.Time tablet_call_time = 21;
  if (has_tablet_call_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        21, *this->tablet_call_time_, false, target);
  }

  // required .roah_rsbb_msgs.Time tablet_position_time = 22;
  if (has_tablet_position_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        22, *this->tablet_position_time_, false, target);
  }

  // required double tablet_position_x = 23;
  if (has_tablet_position_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(23, this->tablet_position_x(), target);
  }

  // required double tablet_position_y = 24;
  if (has_tablet_position_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(24, this->tablet_position_y(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:roah_rsbb_msgs.RoahRsbbBeacon)
  return target;
}

int RoahRsbbBeacon::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:roah_rsbb_msgs.RoahRsbbBeacon)
  int total_size = 0;

  if (has_devices_bell()) {
    // required .roah_rsbb_msgs.Time devices_bell = 10;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->devices_bell_);
  }

  if (has_devices_switch_1()) {
    // required bool devices_switch_1 = 11;
    total_size += 1 + 1;
  }

  if (has_devices_switch_2()) {
    // required bool devices_switch_2 = 12;
    total_size += 1 + 1;
  }

  if (has_devices_switch_3()) {
    // required bool devices_switch_3 = 13;
    total_size += 1 + 1;
  }

  if (has_devices_dimmer()) {
    // required uint32 devices_dimmer = 14;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->devices_dimmer());
  }

  if (has_devices_blinds()) {
    // required uint32 devices_blinds = 15;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->devices_blinds());
  }

  if (has_devices_door_win_detect()) {
    // required bool devices_door_win_detect = 16;
    total_size += 2 + 1;
  }

  if (has_tablet_display_map()) {
    // required bool tablet_display_map = 20;
    total_size += 2 + 1;
  }

  if (has_tablet_call_time()) {
    // required .roah_rsbb_msgs.Time tablet_call_time = 21;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->tablet_call_time_);
  }

  if (has_tablet_position_time()) {
    // required .roah_rsbb_msgs.Time tablet_position_time = 22;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->tablet_position_time_);
  }

  if (has_tablet_position_x()) {
    // required double tablet_position_x = 23;
    total_size += 2 + 8;
  }

  if (has_tablet_position_y()) {
    // required double tablet_position_y = 24;
    total_size += 2 + 8;
  }

  return total_size;
}
int RoahRsbbBeacon::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:roah_rsbb_msgs.RoahRsbbBeacon)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00001ffe) ^ 0x00001ffe) == 0) {  // All required fields are present.
    // required .roah_rsbb_msgs.Time devices_bell = 10;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->devices_bell_);

    // required bool devices_switch_1 = 11;
    total_size += 1 + 1;

    // required bool devices_switch_2 = 12;
    total_size += 1 + 1;

    // required bool devices_switch_3 = 13;
    total_size += 1 + 1;

    // required uint32 devices_dimmer = 14;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->devices_dimmer());

    // required uint32 devices_blinds = 15;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->devices_blinds());

    // required bool devices_door_win_detect = 16;
    total_size += 2 + 1;

    // required bool tablet_display_map = 20;
    total_size += 2 + 1;

    // required .roah_rsbb_msgs.Time tablet_call_time = 21;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->tablet_call_time_);

    // required .roah_rsbb_msgs.Time tablet_position_time = 22;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->tablet_position_time_);

    // required double tablet_position_x = 23;
    total_size += 2 + 8;

    // required double tablet_position_y = 24;
    total_size += 2 + 8;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .roah_rsbb_msgs.BenchmarkingTeam benchmarking_teams = 1;
  total_size += 1 * this->benchmarking_teams_size();
  for (int i = 0; i < this->benchmarking_teams_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->benchmarking_teams(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoahRsbbBeacon::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:roah_rsbb_msgs.RoahRsbbBeacon)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const RoahRsbbBeacon* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RoahRsbbBeacon>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:roah_rsbb_msgs.RoahRsbbBeacon)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:roah_rsbb_msgs.RoahRsbbBeacon)
    MergeFrom(*source);
  }
}

void RoahRsbbBeacon::MergeFrom(const RoahRsbbBeacon& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:roah_rsbb_msgs.RoahRsbbBeacon)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  benchmarking_teams_.MergeFrom(from.benchmarking_teams_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_devices_bell()) {
      mutable_devices_bell()->::roah_rsbb_msgs::Time::MergeFrom(from.devices_bell());
    }
    if (from.has_devices_switch_1()) {
      set_devices_switch_1(from.devices_switch_1());
    }
    if (from.has_devices_switch_2()) {
      set_devices_switch_2(from.devices_switch_2());
    }
    if (from.has_devices_switch_3()) {
      set_devices_switch_3(from.devices_switch_3());
    }
    if (from.has_devices_dimmer()) {
      set_devices_dimmer(from.devices_dimmer());
    }
    if (from.has_devices_blinds()) {
      set_devices_blinds(from.devices_blinds());
    }
    if (from.has_devices_door_win_detect()) {
      set_devices_door_win_detect(from.devices_door_win_detect());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_tablet_display_map()) {
      set_tablet_display_map(from.tablet_display_map());
    }
    if (from.has_tablet_call_time()) {
      mutable_tablet_call_time()->::roah_rsbb_msgs::Time::MergeFrom(from.tablet_call_time());
    }
    if (from.has_tablet_position_time()) {
      mutable_tablet_position_time()->::roah_rsbb_msgs::Time::MergeFrom(from.tablet_position_time());
    }
    if (from.has_tablet_position_x()) {
      set_tablet_position_x(from.tablet_position_x());
    }
    if (from.has_tablet_position_y()) {
      set_tablet_position_y(from.tablet_position_y());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void RoahRsbbBeacon::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:roah_rsbb_msgs.RoahRsbbBeacon)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoahRsbbBeacon::CopyFrom(const RoahRsbbBeacon& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:roah_rsbb_msgs.RoahRsbbBeacon)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoahRsbbBeacon::IsInitialized() const {
  if ((_has_bits_[0] & 0x00001ffe) != 0x00001ffe) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->benchmarking_teams())) return false;
  if (has_devices_bell()) {
    if (!this->devices_bell_->IsInitialized()) return false;
  }
  if (has_tablet_call_time()) {
    if (!this->tablet_call_time_->IsInitialized()) return false;
  }
  if (has_tablet_position_time()) {
    if (!this->tablet_position_time_->IsInitialized()) return false;
  }
  return true;
}

void RoahRsbbBeacon::Swap(RoahRsbbBeacon* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoahRsbbBeacon::InternalSwap(RoahRsbbBeacon* other) {
  benchmarking_teams_.UnsafeArenaSwap(&other->benchmarking_teams_);
  std::swap(devices_bell_, other->devices_bell_);
  std::swap(devices_switch_1_, other->devices_switch_1_);
  std::swap(devices_switch_2_, other->devices_switch_2_);
  std::swap(devices_switch_3_, other->devices_switch_3_);
  std::swap(devices_dimmer_, other->devices_dimmer_);
  std::swap(devices_blinds_, other->devices_blinds_);
  std::swap(devices_door_win_detect_, other->devices_door_win_detect_);
  std::swap(tablet_display_map_, other->tablet_display_map_);
  std::swap(tablet_call_time_, other->tablet_call_time_);
  std::swap(tablet_position_time_, other->tablet_position_time_);
  std::swap(tablet_position_x_, other->tablet_position_x_);
  std::swap(tablet_position_y_, other->tablet_position_y_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoahRsbbBeacon::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RoahRsbbBeacon_descriptor_;
  metadata.reflection = RoahRsbbBeacon_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RoahRsbbBeacon

// repeated .roah_rsbb_msgs.BenchmarkingTeam benchmarking_teams = 1;
int RoahRsbbBeacon::benchmarking_teams_size() const {
  return benchmarking_teams_.size();
}
void RoahRsbbBeacon::clear_benchmarking_teams() {
  benchmarking_teams_.Clear();
}
const ::roah_rsbb_msgs::BenchmarkingTeam& RoahRsbbBeacon::benchmarking_teams(int index) const {
  // @@protoc_insertion_point(field_get:roah_rsbb_msgs.RoahRsbbBeacon.benchmarking_teams)
  return benchmarking_teams_.Get(index);
}
::roah_rsbb_msgs::BenchmarkingTeam* RoahRsbbBeacon::mutable_benchmarking_teams(int index) {
  // @@protoc_insertion_point(field_mutable:roah_rsbb_msgs.RoahRsbbBeacon.benchmarking_teams)
  return benchmarking_teams_.Mutable(index);
}
::roah_rsbb_msgs::BenchmarkingTeam* RoahRsbbBeacon::add_benchmarking_teams() {
  // @@protoc_insertion_point(field_add:roah_rsbb_msgs.RoahRsbbBeacon.benchmarking_teams)
  return benchmarking_teams_.Add();
}
::google::protobuf::RepeatedPtrField< ::roah_rsbb_msgs::BenchmarkingTeam >*
RoahRsbbBeacon::mutable_benchmarking_teams() {
  // @@protoc_insertion_point(field_mutable_list:roah_rsbb_msgs.RoahRsbbBeacon.benchmarking_teams)
  return &benchmarking_teams_;
}
const ::google::protobuf::RepeatedPtrField< ::roah_rsbb_msgs::BenchmarkingTeam >&
RoahRsbbBeacon::benchmarking_teams() const {
  // @@protoc_insertion_point(field_list:roah_rsbb_msgs.RoahRsbbBeacon.benchmarking_teams)
  return benchmarking_teams_;
}

// required .roah_rsbb_msgs.Time devices_bell = 10;
bool RoahRsbbBeacon::has_devices_bell() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void RoahRsbbBeacon::set_has_devices_bell() {
  _has_bits_[0] |= 0x00000002u;
}
void RoahRsbbBeacon::clear_has_devices_bell() {
  _has_bits_[0] &= ~0x00000002u;
}
void RoahRsbbBeacon::clear_devices_bell() {
  if (devices_bell_ != NULL) devices_bell_->::roah_rsbb_msgs::Time::Clear();
  clear_has_devices_bell();
}
const ::roah_rsbb_msgs::Time& RoahRsbbBeacon::devices_bell() const {
  // @@protoc_insertion_point(field_get:roah_rsbb_msgs.RoahRsbbBeacon.devices_bell)
  return devices_bell_ != NULL ? *devices_bell_ : *default_instance_->devices_bell_;
}
::roah_rsbb_msgs::Time* RoahRsbbBeacon::mutable_devices_bell() {
  set_has_devices_bell();
  if (devices_bell_ == NULL) {
    devices_bell_ = new ::roah_rsbb_msgs::Time;
  }
  // @@protoc_insertion_point(field_mutable:roah_rsbb_msgs.RoahRsbbBeacon.devices_bell)
  return devices_bell_;
}
::roah_rsbb_msgs::Time* RoahRsbbBeacon::release_devices_bell() {
  // @@protoc_insertion_point(field_release:roah_rsbb_msgs.RoahRsbbBeacon.devices_bell)
  clear_has_devices_bell();
  ::roah_rsbb_msgs::Time* temp = devices_bell_;
  devices_bell_ = NULL;
  return temp;
}
void RoahRsbbBeacon::set_allocated_devices_bell(::roah_rsbb_msgs::Time* devices_bell) {
  delete devices_bell_;
  devices_bell_ = devices_bell;
  if (devices_bell) {
    set_has_devices_bell();
  } else {
    clear_has_devices_bell();
  }
  // @@protoc_insertion_point(field_set_allocated:roah_rsbb_msgs.RoahRsbbBeacon.devices_bell)
}

// required bool devices_switch_1 = 11;
bool RoahRsbbBeacon::has_devices_switch_1() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void RoahRsbbBeacon::set_has_devices_switch_1() {
  _has_bits_[0] |= 0x00000004u;
}
void RoahRsbbBeacon::clear_has_devices_switch_1() {
  _has_bits_[0] &= ~0x00000004u;
}
void RoahRsbbBeacon::clear_devices_switch_1() {
  devices_switch_1_ = false;
  clear_has_devices_switch_1();
}
 bool RoahRsbbBeacon::devices_switch_1() const {
  // @@protoc_insertion_point(field_get:roah_rsbb_msgs.RoahRsbbBeacon.devices_switch_1)
  return devices_switch_1_;
}
 void RoahRsbbBeacon::set_devices_switch_1(bool value) {
  set_has_devices_switch_1();
  devices_switch_1_ = value;
  // @@protoc_insertion_point(field_set:roah_rsbb_msgs.RoahRsbbBeacon.devices_switch_1)
}

// required bool devices_switch_2 = 12;
bool RoahRsbbBeacon::has_devices_switch_2() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void RoahRsbbBeacon::set_has_devices_switch_2() {
  _has_bits_[0] |= 0x00000008u;
}
void RoahRsbbBeacon::clear_has_devices_switch_2() {
  _has_bits_[0] &= ~0x00000008u;
}
void RoahRsbbBeacon::clear_devices_switch_2() {
  devices_switch_2_ = false;
  clear_has_devices_switch_2();
}
 bool RoahRsbbBeacon::devices_switch_2() const {
  // @@protoc_insertion_point(field_get:roah_rsbb_msgs.RoahRsbbBeacon.devices_switch_2)
  return devices_switch_2_;
}
 void RoahRsbbBeacon::set_devices_switch_2(bool value) {
  set_has_devices_switch_2();
  devices_switch_2_ = value;
  // @@protoc_insertion_point(field_set:roah_rsbb_msgs.RoahRsbbBeacon.devices_switch_2)
}

// required bool devices_switch_3 = 13;
bool RoahRsbbBeacon::has_devices_switch_3() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void RoahRsbbBeacon::set_has_devices_switch_3() {
  _has_bits_[0] |= 0x00000010u;
}
void RoahRsbbBeacon::clear_has_devices_switch_3() {
  _has_bits_[0] &= ~0x00000010u;
}
void RoahRsbbBeacon::clear_devices_switch_3() {
  devices_switch_3_ = false;
  clear_has_devices_switch_3();
}
 bool RoahRsbbBeacon::devices_switch_3() const {
  // @@protoc_insertion_point(field_get:roah_rsbb_msgs.RoahRsbbBeacon.devices_switch_3)
  return devices_switch_3_;
}
 void RoahRsbbBeacon::set_devices_switch_3(bool value) {
  set_has_devices_switch_3();
  devices_switch_3_ = value;
  // @@protoc_insertion_point(field_set:roah_rsbb_msgs.RoahRsbbBeacon.devices_switch_3)
}

// required uint32 devices_dimmer = 14;
bool RoahRsbbBeacon::has_devices_dimmer() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void RoahRsbbBeacon::set_has_devices_dimmer() {
  _has_bits_[0] |= 0x00000020u;
}
void RoahRsbbBeacon::clear_has_devices_dimmer() {
  _has_bits_[0] &= ~0x00000020u;
}
void RoahRsbbBeacon::clear_devices_dimmer() {
  devices_dimmer_ = 0u;
  clear_has_devices_dimmer();
}
 ::google::protobuf::uint32 RoahRsbbBeacon::devices_dimmer() const {
  // @@protoc_insertion_point(field_get:roah_rsbb_msgs.RoahRsbbBeacon.devices_dimmer)
  return devices_dimmer_;
}
 void RoahRsbbBeacon::set_devices_dimmer(::google::protobuf::uint32 value) {
  set_has_devices_dimmer();
  devices_dimmer_ = value;
  // @@protoc_insertion_point(field_set:roah_rsbb_msgs.RoahRsbbBeacon.devices_dimmer)
}

// required uint32 devices_blinds = 15;
bool RoahRsbbBeacon::has_devices_blinds() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void RoahRsbbBeacon::set_has_devices_blinds() {
  _has_bits_[0] |= 0x00000040u;
}
void RoahRsbbBeacon::clear_has_devices_blinds() {
  _has_bits_[0] &= ~0x00000040u;
}
void RoahRsbbBeacon::clear_devices_blinds() {
  devices_blinds_ = 0u;
  clear_has_devices_blinds();
}
 ::google::protobuf::uint32 RoahRsbbBeacon::devices_blinds() const {
  // @@protoc_insertion_point(field_get:roah_rsbb_msgs.RoahRsbbBeacon.devices_blinds)
  return devices_blinds_;
}
 void RoahRsbbBeacon::set_devices_blinds(::google::protobuf::uint32 value) {
  set_has_devices_blinds();
  devices_blinds_ = value;
  // @@protoc_insertion_point(field_set:roah_rsbb_msgs.RoahRsbbBeacon.devices_blinds)
}

// required bool devices_door_win_detect = 16;
bool RoahRsbbBeacon::has_devices_door_win_detect() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void RoahRsbbBeacon::set_has_devices_door_win_detect() {
  _has_bits_[0] |= 0x00000080u;
}
void RoahRsbbBeacon::clear_has_devices_door_win_detect() {
  _has_bits_[0] &= ~0x00000080u;
}
void RoahRsbbBeacon::clear_devices_door_win_detect() {
  devices_door_win_detect_ = false;
  clear_has_devices_door_win_detect();
}
 bool RoahRsbbBeacon::devices_door_win_detect() const {
  // @@protoc_insertion_point(field_get:roah_rsbb_msgs.RoahRsbbBeacon.devices_door_win_detect)
  return devices_door_win_detect_;
}
 void RoahRsbbBeacon::set_devices_door_win_detect(bool value) {
  set_has_devices_door_win_detect();
  devices_door_win_detect_ = value;
  // @@protoc_insertion_point(field_set:roah_rsbb_msgs.RoahRsbbBeacon.devices_door_win_detect)
}

// required bool tablet_display_map = 20;
bool RoahRsbbBeacon::has_tablet_display_map() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void RoahRsbbBeacon::set_has_tablet_display_map() {
  _has_bits_[0] |= 0x00000100u;
}
void RoahRsbbBeacon::clear_has_tablet_display_map() {
  _has_bits_[0] &= ~0x00000100u;
}
void RoahRsbbBeacon::clear_tablet_display_map() {
  tablet_display_map_ = false;
  clear_has_tablet_display_map();
}
 bool RoahRsbbBeacon::tablet_display_map() const {
  // @@protoc_insertion_point(field_get:roah_rsbb_msgs.RoahRsbbBeacon.tablet_display_map)
  return tablet_display_map_;
}
 void RoahRsbbBeacon::set_tablet_display_map(bool value) {
  set_has_tablet_display_map();
  tablet_display_map_ = value;
  // @@protoc_insertion_point(field_set:roah_rsbb_msgs.RoahRsbbBeacon.tablet_display_map)
}

// required .roah_rsbb_msgs.Time tablet_call_time = 21;
bool RoahRsbbBeacon::has_tablet_call_time() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void RoahRsbbBeacon::set_has_tablet_call_time() {
  _has_bits_[0] |= 0x00000200u;
}
void RoahRsbbBeacon::clear_has_tablet_call_time() {
  _has_bits_[0] &= ~0x00000200u;
}
void RoahRsbbBeacon::clear_tablet_call_time() {
  if (tablet_call_time_ != NULL) tablet_call_time_->::roah_rsbb_msgs::Time::Clear();
  clear_has_tablet_call_time();
}
const ::roah_rsbb_msgs::Time& RoahRsbbBeacon::tablet_call_time() const {
  // @@protoc_insertion_point(field_get:roah_rsbb_msgs.RoahRsbbBeacon.tablet_call_time)
  return tablet_call_time_ != NULL ? *tablet_call_time_ : *default_instance_->tablet_call_time_;
}
::roah_rsbb_msgs::Time* RoahRsbbBeacon::mutable_tablet_call_time() {
  set_has_tablet_call_time();
  if (tablet_call_time_ == NULL) {
    tablet_call_time_ = new ::roah_rsbb_msgs::Time;
  }
  // @@protoc_insertion_point(field_mutable:roah_rsbb_msgs.RoahRsbbBeacon.tablet_call_time)
  return tablet_call_time_;
}
::roah_rsbb_msgs::Time* RoahRsbbBeacon::release_tablet_call_time() {
  // @@protoc_insertion_point(field_release:roah_rsbb_msgs.RoahRsbbBeacon.tablet_call_time)
  clear_has_tablet_call_time();
  ::roah_rsbb_msgs::Time* temp = tablet_call_time_;
  tablet_call_time_ = NULL;
  return temp;
}
void RoahRsbbBeacon::set_allocated_tablet_call_time(::roah_rsbb_msgs::Time* tablet_call_time) {
  delete tablet_call_time_;
  tablet_call_time_ = tablet_call_time;
  if (tablet_call_time) {
    set_has_tablet_call_time();
  } else {
    clear_has_tablet_call_time();
  }
  // @@protoc_insertion_point(field_set_allocated:roah_rsbb_msgs.RoahRsbbBeacon.tablet_call_time)
}

// required .roah_rsbb_msgs.Time tablet_position_time = 22;
bool RoahRsbbBeacon::has_tablet_position_time() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void RoahRsbbBeacon::set_has_tablet_position_time() {
  _has_bits_[0] |= 0x00000400u;
}
void RoahRsbbBeacon::clear_has_tablet_position_time() {
  _has_bits_[0] &= ~0x00000400u;
}
void RoahRsbbBeacon::clear_tablet_position_time() {
  if (tablet_position_time_ != NULL) tablet_position_time_->::roah_rsbb_msgs::Time::Clear();
  clear_has_tablet_position_time();
}
const ::roah_rsbb_msgs::Time& RoahRsbbBeacon::tablet_position_time() const {
  // @@protoc_insertion_point(field_get:roah_rsbb_msgs.RoahRsbbBeacon.tablet_position_time)
  return tablet_position_time_ != NULL ? *tablet_position_time_ : *default_instance_->tablet_position_time_;
}
::roah_rsbb_msgs::Time* RoahRsbbBeacon::mutable_tablet_position_time() {
  set_has_tablet_position_time();
  if (tablet_position_time_ == NULL) {
    tablet_position_time_ = new ::roah_rsbb_msgs::Time;
  }
  // @@protoc_insertion_point(field_mutable:roah_rsbb_msgs.RoahRsbbBeacon.tablet_position_time)
  return tablet_position_time_;
}
::roah_rsbb_msgs::Time* RoahRsbbBeacon::release_tablet_position_time() {
  // @@protoc_insertion_point(field_release:roah_rsbb_msgs.RoahRsbbBeacon.tablet_position_time)
  clear_has_tablet_position_time();
  ::roah_rsbb_msgs::Time* temp = tablet_position_time_;
  tablet_position_time_ = NULL;
  return temp;
}
void RoahRsbbBeacon::set_allocated_tablet_position_time(::roah_rsbb_msgs::Time* tablet_position_time) {
  delete tablet_position_time_;
  tablet_position_time_ = tablet_position_time;
  if (tablet_position_time) {
    set_has_tablet_position_time();
  } else {
    clear_has_tablet_position_time();
  }
  // @@protoc_insertion_point(field_set_allocated:roah_rsbb_msgs.RoahRsbbBeacon.tablet_position_time)
}

// required double tablet_position_x = 23;
bool RoahRsbbBeacon::has_tablet_position_x() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void RoahRsbbBeacon::set_has_tablet_position_x() {
  _has_bits_[0] |= 0x00000800u;
}
void RoahRsbbBeacon::clear_has_tablet_position_x() {
  _has_bits_[0] &= ~0x00000800u;
}
void RoahRsbbBeacon::clear_tablet_position_x() {
  tablet_position_x_ = 0;
  clear_has_tablet_position_x();
}
 double RoahRsbbBeacon::tablet_position_x() const {
  // @@protoc_insertion_point(field_get:roah_rsbb_msgs.RoahRsbbBeacon.tablet_position_x)
  return tablet_position_x_;
}
 void RoahRsbbBeacon::set_tablet_position_x(double value) {
  set_has_tablet_position_x();
  tablet_position_x_ = value;
  // @@protoc_insertion_point(field_set:roah_rsbb_msgs.RoahRsbbBeacon.tablet_position_x)
}

// required double tablet_position_y = 24;
bool RoahRsbbBeacon::has_tablet_position_y() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void RoahRsbbBeacon::set_has_tablet_position_y() {
  _has_bits_[0] |= 0x00001000u;
}
void RoahRsbbBeacon::clear_has_tablet_position_y() {
  _has_bits_[0] &= ~0x00001000u;
}
void RoahRsbbBeacon::clear_tablet_position_y() {
  tablet_position_y_ = 0;
  clear_has_tablet_position_y();
}
 double RoahRsbbBeacon::tablet_position_y() const {
  // @@protoc_insertion_point(field_get:roah_rsbb_msgs.RoahRsbbBeacon.tablet_position_y)
  return tablet_position_y_;
}
 void RoahRsbbBeacon::set_tablet_position_y(double value) {
  set_has_tablet_position_y();
  tablet_position_y_ = value;
  // @@protoc_insertion_point(field_set:roah_rsbb_msgs.RoahRsbbBeacon.tablet_position_y)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* BenchmarkingTeam_CompType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BenchmarkingTeam_CompType_descriptor_;
}
bool BenchmarkingTeam_CompType_IsValid(int value) {
  switch(value) {
    case 11:
    case 6666:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const BenchmarkingTeam_CompType BenchmarkingTeam::COMP_ID;
const BenchmarkingTeam_CompType BenchmarkingTeam::MSG_TYPE;
const BenchmarkingTeam_CompType BenchmarkingTeam::CompType_MIN;
const BenchmarkingTeam_CompType BenchmarkingTeam::CompType_MAX;
const int BenchmarkingTeam::CompType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BenchmarkingTeam::kTeamNameFieldNumber;
const int BenchmarkingTeam::kRobotNameFieldNumber;
const int BenchmarkingTeam::kRsbbPortFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BenchmarkingTeam::BenchmarkingTeam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:roah_rsbb_msgs.BenchmarkingTeam)
}

void BenchmarkingTeam::InitAsDefaultInstance() {
}

BenchmarkingTeam::BenchmarkingTeam(const BenchmarkingTeam& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:roah_rsbb_msgs.BenchmarkingTeam)
}

void BenchmarkingTeam::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  team_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  robot_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rsbb_port_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BenchmarkingTeam::~BenchmarkingTeam() {
  // @@protoc_insertion_point(destructor:roah_rsbb_msgs.BenchmarkingTeam)
  SharedDtor();
}

void BenchmarkingTeam::SharedDtor() {
  team_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  robot_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void BenchmarkingTeam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BenchmarkingTeam::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BenchmarkingTeam_descriptor_;
}

const BenchmarkingTeam& BenchmarkingTeam::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RoahRsbbBeacon_2eproto();
  return *default_instance_;
}

BenchmarkingTeam* BenchmarkingTeam::default_instance_ = NULL;

BenchmarkingTeam* BenchmarkingTeam::New(::google::protobuf::Arena* arena) const {
  BenchmarkingTeam* n = new BenchmarkingTeam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BenchmarkingTeam::Clear() {
// @@protoc_insertion_point(message_clear_start:roah_rsbb_msgs.BenchmarkingTeam)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_team_name()) {
      team_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_robot_name()) {
      robot_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    rsbb_port_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool BenchmarkingTeam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:roah_rsbb_msgs.BenchmarkingTeam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string team_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_team_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->team_name().data(), this->team_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "roah_rsbb_msgs.BenchmarkingTeam.team_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_robot_name;
        break;
      }

      // required string robot_name = 2;
      case 2: {
        if (tag == 18) {
         parse_robot_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_robot_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->robot_name().data(), this->robot_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "roah_rsbb_msgs.BenchmarkingTeam.robot_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_rsbb_port;
        break;
      }

      // required uint32 rsbb_port = 3;
      case 3: {
        if (tag == 24) {
         parse_rsbb_port:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rsbb_port_)));
          set_has_rsbb_port();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:roah_rsbb_msgs.BenchmarkingTeam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:roah_rsbb_msgs.BenchmarkingTeam)
  return false;
#undef DO_
}

void BenchmarkingTeam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:roah_rsbb_msgs.BenchmarkingTeam)
  // required string team_name = 1;
  if (has_team_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->team_name().data(), this->team_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "roah_rsbb_msgs.BenchmarkingTeam.team_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->team_name(), output);
  }

  // required string robot_name = 2;
  if (has_robot_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->robot_name().data(), this->robot_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "roah_rsbb_msgs.BenchmarkingTeam.robot_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->robot_name(), output);
  }

  // required uint32 rsbb_port = 3;
  if (has_rsbb_port()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->rsbb_port(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:roah_rsbb_msgs.BenchmarkingTeam)
}

::google::protobuf::uint8* BenchmarkingTeam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:roah_rsbb_msgs.BenchmarkingTeam)
  // required string team_name = 1;
  if (has_team_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->team_name().data(), this->team_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "roah_rsbb_msgs.BenchmarkingTeam.team_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->team_name(), target);
  }

  // required string robot_name = 2;
  if (has_robot_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->robot_name().data(), this->robot_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "roah_rsbb_msgs.BenchmarkingTeam.robot_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->robot_name(), target);
  }

  // required uint32 rsbb_port = 3;
  if (has_rsbb_port()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->rsbb_port(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:roah_rsbb_msgs.BenchmarkingTeam)
  return target;
}

int BenchmarkingTeam::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:roah_rsbb_msgs.BenchmarkingTeam)
  int total_size = 0;

  if (has_team_name()) {
    // required string team_name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->team_name());
  }

  if (has_robot_name()) {
    // required string robot_name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->robot_name());
  }

  if (has_rsbb_port()) {
    // required uint32 rsbb_port = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->rsbb_port());
  }

  return total_size;
}
int BenchmarkingTeam::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:roah_rsbb_msgs.BenchmarkingTeam)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string team_name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->team_name());

    // required string robot_name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->robot_name());

    // required uint32 rsbb_port = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->rsbb_port());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BenchmarkingTeam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:roah_rsbb_msgs.BenchmarkingTeam)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const BenchmarkingTeam* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const BenchmarkingTeam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:roah_rsbb_msgs.BenchmarkingTeam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:roah_rsbb_msgs.BenchmarkingTeam)
    MergeFrom(*source);
  }
}

void BenchmarkingTeam::MergeFrom(const BenchmarkingTeam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:roah_rsbb_msgs.BenchmarkingTeam)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_team_name()) {
      set_has_team_name();
      team_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.team_name_);
    }
    if (from.has_robot_name()) {
      set_has_robot_name();
      robot_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.robot_name_);
    }
    if (from.has_rsbb_port()) {
      set_rsbb_port(from.rsbb_port());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void BenchmarkingTeam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:roah_rsbb_msgs.BenchmarkingTeam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BenchmarkingTeam::CopyFrom(const BenchmarkingTeam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:roah_rsbb_msgs.BenchmarkingTeam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BenchmarkingTeam::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void BenchmarkingTeam::Swap(BenchmarkingTeam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BenchmarkingTeam::InternalSwap(BenchmarkingTeam* other) {
  team_name_.Swap(&other->team_name_);
  robot_name_.Swap(&other->robot_name_);
  std::swap(rsbb_port_, other->rsbb_port_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BenchmarkingTeam::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BenchmarkingTeam_descriptor_;
  metadata.reflection = BenchmarkingTeam_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BenchmarkingTeam

// required string team_name = 1;
bool BenchmarkingTeam::has_team_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BenchmarkingTeam::set_has_team_name() {
  _has_bits_[0] |= 0x00000001u;
}
void BenchmarkingTeam::clear_has_team_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void BenchmarkingTeam::clear_team_name() {
  team_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_team_name();
}
 const ::std::string& BenchmarkingTeam::team_name() const {
  // @@protoc_insertion_point(field_get:roah_rsbb_msgs.BenchmarkingTeam.team_name)
  return team_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BenchmarkingTeam::set_team_name(const ::std::string& value) {
  set_has_team_name();
  team_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:roah_rsbb_msgs.BenchmarkingTeam.team_name)
}
 void BenchmarkingTeam::set_team_name(const char* value) {
  set_has_team_name();
  team_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:roah_rsbb_msgs.BenchmarkingTeam.team_name)
}
 void BenchmarkingTeam::set_team_name(const char* value, size_t size) {
  set_has_team_name();
  team_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:roah_rsbb_msgs.BenchmarkingTeam.team_name)
}
 ::std::string* BenchmarkingTeam::mutable_team_name() {
  set_has_team_name();
  // @@protoc_insertion_point(field_mutable:roah_rsbb_msgs.BenchmarkingTeam.team_name)
  return team_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BenchmarkingTeam::release_team_name() {
  // @@protoc_insertion_point(field_release:roah_rsbb_msgs.BenchmarkingTeam.team_name)
  clear_has_team_name();
  return team_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BenchmarkingTeam::set_allocated_team_name(::std::string* team_name) {
  if (team_name != NULL) {
    set_has_team_name();
  } else {
    clear_has_team_name();
  }
  team_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), team_name);
  // @@protoc_insertion_point(field_set_allocated:roah_rsbb_msgs.BenchmarkingTeam.team_name)
}

// required string robot_name = 2;
bool BenchmarkingTeam::has_robot_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BenchmarkingTeam::set_has_robot_name() {
  _has_bits_[0] |= 0x00000002u;
}
void BenchmarkingTeam::clear_has_robot_name() {
  _has_bits_[0] &= ~0x00000002u;
}
void BenchmarkingTeam::clear_robot_name() {
  robot_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_robot_name();
}
 const ::std::string& BenchmarkingTeam::robot_name() const {
  // @@protoc_insertion_point(field_get:roah_rsbb_msgs.BenchmarkingTeam.robot_name)
  return robot_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BenchmarkingTeam::set_robot_name(const ::std::string& value) {
  set_has_robot_name();
  robot_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:roah_rsbb_msgs.BenchmarkingTeam.robot_name)
}
 void BenchmarkingTeam::set_robot_name(const char* value) {
  set_has_robot_name();
  robot_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:roah_rsbb_msgs.BenchmarkingTeam.robot_name)
}
 void BenchmarkingTeam::set_robot_name(const char* value, size_t size) {
  set_has_robot_name();
  robot_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:roah_rsbb_msgs.BenchmarkingTeam.robot_name)
}
 ::std::string* BenchmarkingTeam::mutable_robot_name() {
  set_has_robot_name();
  // @@protoc_insertion_point(field_mutable:roah_rsbb_msgs.BenchmarkingTeam.robot_name)
  return robot_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BenchmarkingTeam::release_robot_name() {
  // @@protoc_insertion_point(field_release:roah_rsbb_msgs.BenchmarkingTeam.robot_name)
  clear_has_robot_name();
  return robot_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BenchmarkingTeam::set_allocated_robot_name(::std::string* robot_name) {
  if (robot_name != NULL) {
    set_has_robot_name();
  } else {
    clear_has_robot_name();
  }
  robot_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), robot_name);
  // @@protoc_insertion_point(field_set_allocated:roah_rsbb_msgs.BenchmarkingTeam.robot_name)
}

// required uint32 rsbb_port = 3;
bool BenchmarkingTeam::has_rsbb_port() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BenchmarkingTeam::set_has_rsbb_port() {
  _has_bits_[0] |= 0x00000004u;
}
void BenchmarkingTeam::clear_has_rsbb_port() {
  _has_bits_[0] &= ~0x00000004u;
}
void BenchmarkingTeam::clear_rsbb_port() {
  rsbb_port_ = 0u;
  clear_has_rsbb_port();
}
 ::google::protobuf::uint32 BenchmarkingTeam::rsbb_port() const {
  // @@protoc_insertion_point(field_get:roah_rsbb_msgs.BenchmarkingTeam.rsbb_port)
  return rsbb_port_;
}
 void BenchmarkingTeam::set_rsbb_port(::google::protobuf::uint32 value) {
  set_has_rsbb_port();
  rsbb_port_ = value;
  // @@protoc_insertion_point(field_set:roah_rsbb_msgs.BenchmarkingTeam.rsbb_port)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace roah_rsbb_msgs

// @@protoc_insertion_point(global_scope)
