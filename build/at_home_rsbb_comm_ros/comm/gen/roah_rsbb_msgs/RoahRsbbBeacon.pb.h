// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: RoahRsbbBeacon.proto

#ifndef PROTOBUF_RoahRsbbBeacon_2eproto__INCLUDED
#define PROTOBUF_RoahRsbbBeacon_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "Time.pb.h"
// @@protoc_insertion_point(includes)

namespace roah_rsbb_msgs {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_RoahRsbbBeacon_2eproto();
void protobuf_AssignDesc_RoahRsbbBeacon_2eproto();
void protobuf_ShutdownFile_RoahRsbbBeacon_2eproto();

class BenchmarkingTeam;
class RoahRsbbBeacon;

enum RoahRsbbBeacon_CompType {
  RoahRsbbBeacon_CompType_COMP_ID = 6666,
  RoahRsbbBeacon_CompType_MSG_TYPE = 10
};
bool RoahRsbbBeacon_CompType_IsValid(int value);
const RoahRsbbBeacon_CompType RoahRsbbBeacon_CompType_CompType_MIN = RoahRsbbBeacon_CompType_MSG_TYPE;
const RoahRsbbBeacon_CompType RoahRsbbBeacon_CompType_CompType_MAX = RoahRsbbBeacon_CompType_COMP_ID;
const int RoahRsbbBeacon_CompType_CompType_ARRAYSIZE = RoahRsbbBeacon_CompType_CompType_MAX + 1;

const ::google::protobuf::EnumDescriptor* RoahRsbbBeacon_CompType_descriptor();
inline const ::std::string& RoahRsbbBeacon_CompType_Name(RoahRsbbBeacon_CompType value) {
  return ::google::protobuf::internal::NameOfEnum(
    RoahRsbbBeacon_CompType_descriptor(), value);
}
inline bool RoahRsbbBeacon_CompType_Parse(
    const ::std::string& name, RoahRsbbBeacon_CompType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RoahRsbbBeacon_CompType>(
    RoahRsbbBeacon_CompType_descriptor(), name, value);
}
enum BenchmarkingTeam_CompType {
  BenchmarkingTeam_CompType_COMP_ID = 6666,
  BenchmarkingTeam_CompType_MSG_TYPE = 11
};
bool BenchmarkingTeam_CompType_IsValid(int value);
const BenchmarkingTeam_CompType BenchmarkingTeam_CompType_CompType_MIN = BenchmarkingTeam_CompType_MSG_TYPE;
const BenchmarkingTeam_CompType BenchmarkingTeam_CompType_CompType_MAX = BenchmarkingTeam_CompType_COMP_ID;
const int BenchmarkingTeam_CompType_CompType_ARRAYSIZE = BenchmarkingTeam_CompType_CompType_MAX + 1;

const ::google::protobuf::EnumDescriptor* BenchmarkingTeam_CompType_descriptor();
inline const ::std::string& BenchmarkingTeam_CompType_Name(BenchmarkingTeam_CompType value) {
  return ::google::protobuf::internal::NameOfEnum(
    BenchmarkingTeam_CompType_descriptor(), value);
}
inline bool BenchmarkingTeam_CompType_Parse(
    const ::std::string& name, BenchmarkingTeam_CompType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BenchmarkingTeam_CompType>(
    BenchmarkingTeam_CompType_descriptor(), name, value);
}
// ===================================================================

class RoahRsbbBeacon : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:roah_rsbb_msgs.RoahRsbbBeacon) */ {
 public:
  RoahRsbbBeacon();
  virtual ~RoahRsbbBeacon();

  RoahRsbbBeacon(const RoahRsbbBeacon& from);

  inline RoahRsbbBeacon& operator=(const RoahRsbbBeacon& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoahRsbbBeacon& default_instance();

  void Swap(RoahRsbbBeacon* other);

  // implements Message ----------------------------------------------

  inline RoahRsbbBeacon* New() const { return New(NULL); }

  RoahRsbbBeacon* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoahRsbbBeacon& from);
  void MergeFrom(const RoahRsbbBeacon& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RoahRsbbBeacon* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef RoahRsbbBeacon_CompType CompType;
  static const CompType COMP_ID =
    RoahRsbbBeacon_CompType_COMP_ID;
  static const CompType MSG_TYPE =
    RoahRsbbBeacon_CompType_MSG_TYPE;
  static inline bool CompType_IsValid(int value) {
    return RoahRsbbBeacon_CompType_IsValid(value);
  }
  static const CompType CompType_MIN =
    RoahRsbbBeacon_CompType_CompType_MIN;
  static const CompType CompType_MAX =
    RoahRsbbBeacon_CompType_CompType_MAX;
  static const int CompType_ARRAYSIZE =
    RoahRsbbBeacon_CompType_CompType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CompType_descriptor() {
    return RoahRsbbBeacon_CompType_descriptor();
  }
  static inline const ::std::string& CompType_Name(CompType value) {
    return RoahRsbbBeacon_CompType_Name(value);
  }
  static inline bool CompType_Parse(const ::std::string& name,
      CompType* value) {
    return RoahRsbbBeacon_CompType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .roah_rsbb_msgs.BenchmarkingTeam benchmarking_teams = 1;
  int benchmarking_teams_size() const;
  void clear_benchmarking_teams();
  static const int kBenchmarkingTeamsFieldNumber = 1;
  const ::roah_rsbb_msgs::BenchmarkingTeam& benchmarking_teams(int index) const;
  ::roah_rsbb_msgs::BenchmarkingTeam* mutable_benchmarking_teams(int index);
  ::roah_rsbb_msgs::BenchmarkingTeam* add_benchmarking_teams();
  ::google::protobuf::RepeatedPtrField< ::roah_rsbb_msgs::BenchmarkingTeam >*
      mutable_benchmarking_teams();
  const ::google::protobuf::RepeatedPtrField< ::roah_rsbb_msgs::BenchmarkingTeam >&
      benchmarking_teams() const;

  // required .roah_rsbb_msgs.Time devices_bell = 10;
  bool has_devices_bell() const;
  void clear_devices_bell();
  static const int kDevicesBellFieldNumber = 10;
  const ::roah_rsbb_msgs::Time& devices_bell() const;
  ::roah_rsbb_msgs::Time* mutable_devices_bell();
  ::roah_rsbb_msgs::Time* release_devices_bell();
  void set_allocated_devices_bell(::roah_rsbb_msgs::Time* devices_bell);

  // required bool devices_switch_1 = 11;
  bool has_devices_switch_1() const;
  void clear_devices_switch_1();
  static const int kDevicesSwitch1FieldNumber = 11;
  bool devices_switch_1() const;
  void set_devices_switch_1(bool value);

  // required bool devices_switch_2 = 12;
  bool has_devices_switch_2() const;
  void clear_devices_switch_2();
  static const int kDevicesSwitch2FieldNumber = 12;
  bool devices_switch_2() const;
  void set_devices_switch_2(bool value);

  // required bool devices_switch_3 = 13;
  bool has_devices_switch_3() const;
  void clear_devices_switch_3();
  static const int kDevicesSwitch3FieldNumber = 13;
  bool devices_switch_3() const;
  void set_devices_switch_3(bool value);

  // required uint32 devices_dimmer = 14;
  bool has_devices_dimmer() const;
  void clear_devices_dimmer();
  static const int kDevicesDimmerFieldNumber = 14;
  ::google::protobuf::uint32 devices_dimmer() const;
  void set_devices_dimmer(::google::protobuf::uint32 value);

  // required uint32 devices_blinds = 15;
  bool has_devices_blinds() const;
  void clear_devices_blinds();
  static const int kDevicesBlindsFieldNumber = 15;
  ::google::protobuf::uint32 devices_blinds() const;
  void set_devices_blinds(::google::protobuf::uint32 value);

  // required bool devices_door_win_detect = 16;
  bool has_devices_door_win_detect() const;
  void clear_devices_door_win_detect();
  static const int kDevicesDoorWinDetectFieldNumber = 16;
  bool devices_door_win_detect() const;
  void set_devices_door_win_detect(bool value);

  // required bool tablet_display_map = 20;
  bool has_tablet_display_map() const;
  void clear_tablet_display_map();
  static const int kTabletDisplayMapFieldNumber = 20;
  bool tablet_display_map() const;
  void set_tablet_display_map(bool value);

  // required .roah_rsbb_msgs.Time tablet_call_time = 21;
  bool has_tablet_call_time() const;
  void clear_tablet_call_time();
  static const int kTabletCallTimeFieldNumber = 21;
  const ::roah_rsbb_msgs::Time& tablet_call_time() const;
  ::roah_rsbb_msgs::Time* mutable_tablet_call_time();
  ::roah_rsbb_msgs::Time* release_tablet_call_time();
  void set_allocated_tablet_call_time(::roah_rsbb_msgs::Time* tablet_call_time);

  // required .roah_rsbb_msgs.Time tablet_position_time = 22;
  bool has_tablet_position_time() const;
  void clear_tablet_position_time();
  static const int kTabletPositionTimeFieldNumber = 22;
  const ::roah_rsbb_msgs::Time& tablet_position_time() const;
  ::roah_rsbb_msgs::Time* mutable_tablet_position_time();
  ::roah_rsbb_msgs::Time* release_tablet_position_time();
  void set_allocated_tablet_position_time(::roah_rsbb_msgs::Time* tablet_position_time);

  // required double tablet_position_x = 23;
  bool has_tablet_position_x() const;
  void clear_tablet_position_x();
  static const int kTabletPositionXFieldNumber = 23;
  double tablet_position_x() const;
  void set_tablet_position_x(double value);

  // required double tablet_position_y = 24;
  bool has_tablet_position_y() const;
  void clear_tablet_position_y();
  static const int kTabletPositionYFieldNumber = 24;
  double tablet_position_y() const;
  void set_tablet_position_y(double value);

  // @@protoc_insertion_point(class_scope:roah_rsbb_msgs.RoahRsbbBeacon)
 private:
  inline void set_has_devices_bell();
  inline void clear_has_devices_bell();
  inline void set_has_devices_switch_1();
  inline void clear_has_devices_switch_1();
  inline void set_has_devices_switch_2();
  inline void clear_has_devices_switch_2();
  inline void set_has_devices_switch_3();
  inline void clear_has_devices_switch_3();
  inline void set_has_devices_dimmer();
  inline void clear_has_devices_dimmer();
  inline void set_has_devices_blinds();
  inline void clear_has_devices_blinds();
  inline void set_has_devices_door_win_detect();
  inline void clear_has_devices_door_win_detect();
  inline void set_has_tablet_display_map();
  inline void clear_has_tablet_display_map();
  inline void set_has_tablet_call_time();
  inline void clear_has_tablet_call_time();
  inline void set_has_tablet_position_time();
  inline void clear_has_tablet_position_time();
  inline void set_has_tablet_position_x();
  inline void clear_has_tablet_position_x();
  inline void set_has_tablet_position_y();
  inline void clear_has_tablet_position_y();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::roah_rsbb_msgs::BenchmarkingTeam > benchmarking_teams_;
  ::roah_rsbb_msgs::Time* devices_bell_;
  bool devices_switch_1_;
  bool devices_switch_2_;
  bool devices_switch_3_;
  bool devices_door_win_detect_;
  ::google::protobuf::uint32 devices_dimmer_;
  ::google::protobuf::uint32 devices_blinds_;
  bool tablet_display_map_;
  ::roah_rsbb_msgs::Time* tablet_call_time_;
  ::roah_rsbb_msgs::Time* tablet_position_time_;
  double tablet_position_x_;
  double tablet_position_y_;
  friend void  protobuf_AddDesc_RoahRsbbBeacon_2eproto();
  friend void protobuf_AssignDesc_RoahRsbbBeacon_2eproto();
  friend void protobuf_ShutdownFile_RoahRsbbBeacon_2eproto();

  void InitAsDefaultInstance();
  static RoahRsbbBeacon* default_instance_;
};
// -------------------------------------------------------------------

class BenchmarkingTeam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:roah_rsbb_msgs.BenchmarkingTeam) */ {
 public:
  BenchmarkingTeam();
  virtual ~BenchmarkingTeam();

  BenchmarkingTeam(const BenchmarkingTeam& from);

  inline BenchmarkingTeam& operator=(const BenchmarkingTeam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BenchmarkingTeam& default_instance();

  void Swap(BenchmarkingTeam* other);

  // implements Message ----------------------------------------------

  inline BenchmarkingTeam* New() const { return New(NULL); }

  BenchmarkingTeam* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BenchmarkingTeam& from);
  void MergeFrom(const BenchmarkingTeam& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BenchmarkingTeam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef BenchmarkingTeam_CompType CompType;
  static const CompType COMP_ID =
    BenchmarkingTeam_CompType_COMP_ID;
  static const CompType MSG_TYPE =
    BenchmarkingTeam_CompType_MSG_TYPE;
  static inline bool CompType_IsValid(int value) {
    return BenchmarkingTeam_CompType_IsValid(value);
  }
  static const CompType CompType_MIN =
    BenchmarkingTeam_CompType_CompType_MIN;
  static const CompType CompType_MAX =
    BenchmarkingTeam_CompType_CompType_MAX;
  static const int CompType_ARRAYSIZE =
    BenchmarkingTeam_CompType_CompType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CompType_descriptor() {
    return BenchmarkingTeam_CompType_descriptor();
  }
  static inline const ::std::string& CompType_Name(CompType value) {
    return BenchmarkingTeam_CompType_Name(value);
  }
  static inline bool CompType_Parse(const ::std::string& name,
      CompType* value) {
    return BenchmarkingTeam_CompType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required string team_name = 1;
  bool has_team_name() const;
  void clear_team_name();
  static const int kTeamNameFieldNumber = 1;
  const ::std::string& team_name() const;
  void set_team_name(const ::std::string& value);
  void set_team_name(const char* value);
  void set_team_name(const char* value, size_t size);
  ::std::string* mutable_team_name();
  ::std::string* release_team_name();
  void set_allocated_team_name(::std::string* team_name);

  // required string robot_name = 2;
  bool has_robot_name() const;
  void clear_robot_name();
  static const int kRobotNameFieldNumber = 2;
  const ::std::string& robot_name() const;
  void set_robot_name(const ::std::string& value);
  void set_robot_name(const char* value);
  void set_robot_name(const char* value, size_t size);
  ::std::string* mutable_robot_name();
  ::std::string* release_robot_name();
  void set_allocated_robot_name(::std::string* robot_name);

  // required uint32 rsbb_port = 3;
  bool has_rsbb_port() const;
  void clear_rsbb_port();
  static const int kRsbbPortFieldNumber = 3;
  ::google::protobuf::uint32 rsbb_port() const;
  void set_rsbb_port(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:roah_rsbb_msgs.BenchmarkingTeam)
 private:
  inline void set_has_team_name();
  inline void clear_has_team_name();
  inline void set_has_robot_name();
  inline void clear_has_robot_name();
  inline void set_has_rsbb_port();
  inline void clear_has_rsbb_port();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr team_name_;
  ::google::protobuf::internal::ArenaStringPtr robot_name_;
  ::google::protobuf::uint32 rsbb_port_;
  friend void  protobuf_AddDesc_RoahRsbbBeacon_2eproto();
  friend void protobuf_AssignDesc_RoahRsbbBeacon_2eproto();
  friend void protobuf_ShutdownFile_RoahRsbbBeacon_2eproto();

  void InitAsDefaultInstance();
  static BenchmarkingTeam* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// RoahRsbbBeacon

// repeated .roah_rsbb_msgs.BenchmarkingTeam benchmarking_teams = 1;
inline int RoahRsbbBeacon::benchmarking_teams_size() const {
  return benchmarking_teams_.size();
}
inline void RoahRsbbBeacon::clear_benchmarking_teams() {
  benchmarking_teams_.Clear();
}
inline const ::roah_rsbb_msgs::BenchmarkingTeam& RoahRsbbBeacon::benchmarking_teams(int index) const {
  // @@protoc_insertion_point(field_get:roah_rsbb_msgs.RoahRsbbBeacon.benchmarking_teams)
  return benchmarking_teams_.Get(index);
}
inline ::roah_rsbb_msgs::BenchmarkingTeam* RoahRsbbBeacon::mutable_benchmarking_teams(int index) {
  // @@protoc_insertion_point(field_mutable:roah_rsbb_msgs.RoahRsbbBeacon.benchmarking_teams)
  return benchmarking_teams_.Mutable(index);
}
inline ::roah_rsbb_msgs::BenchmarkingTeam* RoahRsbbBeacon::add_benchmarking_teams() {
  // @@protoc_insertion_point(field_add:roah_rsbb_msgs.RoahRsbbBeacon.benchmarking_teams)
  return benchmarking_teams_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::roah_rsbb_msgs::BenchmarkingTeam >*
RoahRsbbBeacon::mutable_benchmarking_teams() {
  // @@protoc_insertion_point(field_mutable_list:roah_rsbb_msgs.RoahRsbbBeacon.benchmarking_teams)
  return &benchmarking_teams_;
}
inline const ::google::protobuf::RepeatedPtrField< ::roah_rsbb_msgs::BenchmarkingTeam >&
RoahRsbbBeacon::benchmarking_teams() const {
  // @@protoc_insertion_point(field_list:roah_rsbb_msgs.RoahRsbbBeacon.benchmarking_teams)
  return benchmarking_teams_;
}

// required .roah_rsbb_msgs.Time devices_bell = 10;
inline bool RoahRsbbBeacon::has_devices_bell() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RoahRsbbBeacon::set_has_devices_bell() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RoahRsbbBeacon::clear_has_devices_bell() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RoahRsbbBeacon::clear_devices_bell() {
  if (devices_bell_ != NULL) devices_bell_->::roah_rsbb_msgs::Time::Clear();
  clear_has_devices_bell();
}
inline const ::roah_rsbb_msgs::Time& RoahRsbbBeacon::devices_bell() const {
  // @@protoc_insertion_point(field_get:roah_rsbb_msgs.RoahRsbbBeacon.devices_bell)
  return devices_bell_ != NULL ? *devices_bell_ : *default_instance_->devices_bell_;
}
inline ::roah_rsbb_msgs::Time* RoahRsbbBeacon::mutable_devices_bell() {
  set_has_devices_bell();
  if (devices_bell_ == NULL) {
    devices_bell_ = new ::roah_rsbb_msgs::Time;
  }
  // @@protoc_insertion_point(field_mutable:roah_rsbb_msgs.RoahRsbbBeacon.devices_bell)
  return devices_bell_;
}
inline ::roah_rsbb_msgs::Time* RoahRsbbBeacon::release_devices_bell() {
  // @@protoc_insertion_point(field_release:roah_rsbb_msgs.RoahRsbbBeacon.devices_bell)
  clear_has_devices_bell();
  ::roah_rsbb_msgs::Time* temp = devices_bell_;
  devices_bell_ = NULL;
  return temp;
}
inline void RoahRsbbBeacon::set_allocated_devices_bell(::roah_rsbb_msgs::Time* devices_bell) {
  delete devices_bell_;
  devices_bell_ = devices_bell;
  if (devices_bell) {
    set_has_devices_bell();
  } else {
    clear_has_devices_bell();
  }
  // @@protoc_insertion_point(field_set_allocated:roah_rsbb_msgs.RoahRsbbBeacon.devices_bell)
}

// required bool devices_switch_1 = 11;
inline bool RoahRsbbBeacon::has_devices_switch_1() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RoahRsbbBeacon::set_has_devices_switch_1() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RoahRsbbBeacon::clear_has_devices_switch_1() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RoahRsbbBeacon::clear_devices_switch_1() {
  devices_switch_1_ = false;
  clear_has_devices_switch_1();
}
inline bool RoahRsbbBeacon::devices_switch_1() const {
  // @@protoc_insertion_point(field_get:roah_rsbb_msgs.RoahRsbbBeacon.devices_switch_1)
  return devices_switch_1_;
}
inline void RoahRsbbBeacon::set_devices_switch_1(bool value) {
  set_has_devices_switch_1();
  devices_switch_1_ = value;
  // @@protoc_insertion_point(field_set:roah_rsbb_msgs.RoahRsbbBeacon.devices_switch_1)
}

// required bool devices_switch_2 = 12;
inline bool RoahRsbbBeacon::has_devices_switch_2() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RoahRsbbBeacon::set_has_devices_switch_2() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RoahRsbbBeacon::clear_has_devices_switch_2() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RoahRsbbBeacon::clear_devices_switch_2() {
  devices_switch_2_ = false;
  clear_has_devices_switch_2();
}
inline bool RoahRsbbBeacon::devices_switch_2() const {
  // @@protoc_insertion_point(field_get:roah_rsbb_msgs.RoahRsbbBeacon.devices_switch_2)
  return devices_switch_2_;
}
inline void RoahRsbbBeacon::set_devices_switch_2(bool value) {
  set_has_devices_switch_2();
  devices_switch_2_ = value;
  // @@protoc_insertion_point(field_set:roah_rsbb_msgs.RoahRsbbBeacon.devices_switch_2)
}

// required bool devices_switch_3 = 13;
inline bool RoahRsbbBeacon::has_devices_switch_3() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RoahRsbbBeacon::set_has_devices_switch_3() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RoahRsbbBeacon::clear_has_devices_switch_3() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RoahRsbbBeacon::clear_devices_switch_3() {
  devices_switch_3_ = false;
  clear_has_devices_switch_3();
}
inline bool RoahRsbbBeacon::devices_switch_3() const {
  // @@protoc_insertion_point(field_get:roah_rsbb_msgs.RoahRsbbBeacon.devices_switch_3)
  return devices_switch_3_;
}
inline void RoahRsbbBeacon::set_devices_switch_3(bool value) {
  set_has_devices_switch_3();
  devices_switch_3_ = value;
  // @@protoc_insertion_point(field_set:roah_rsbb_msgs.RoahRsbbBeacon.devices_switch_3)
}

// required uint32 devices_dimmer = 14;
inline bool RoahRsbbBeacon::has_devices_dimmer() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RoahRsbbBeacon::set_has_devices_dimmer() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RoahRsbbBeacon::clear_has_devices_dimmer() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RoahRsbbBeacon::clear_devices_dimmer() {
  devices_dimmer_ = 0u;
  clear_has_devices_dimmer();
}
inline ::google::protobuf::uint32 RoahRsbbBeacon::devices_dimmer() const {
  // @@protoc_insertion_point(field_get:roah_rsbb_msgs.RoahRsbbBeacon.devices_dimmer)
  return devices_dimmer_;
}
inline void RoahRsbbBeacon::set_devices_dimmer(::google::protobuf::uint32 value) {
  set_has_devices_dimmer();
  devices_dimmer_ = value;
  // @@protoc_insertion_point(field_set:roah_rsbb_msgs.RoahRsbbBeacon.devices_dimmer)
}

// required uint32 devices_blinds = 15;
inline bool RoahRsbbBeacon::has_devices_blinds() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void RoahRsbbBeacon::set_has_devices_blinds() {
  _has_bits_[0] |= 0x00000040u;
}
inline void RoahRsbbBeacon::clear_has_devices_blinds() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void RoahRsbbBeacon::clear_devices_blinds() {
  devices_blinds_ = 0u;
  clear_has_devices_blinds();
}
inline ::google::protobuf::uint32 RoahRsbbBeacon::devices_blinds() const {
  // @@protoc_insertion_point(field_get:roah_rsbb_msgs.RoahRsbbBeacon.devices_blinds)
  return devices_blinds_;
}
inline void RoahRsbbBeacon::set_devices_blinds(::google::protobuf::uint32 value) {
  set_has_devices_blinds();
  devices_blinds_ = value;
  // @@protoc_insertion_point(field_set:roah_rsbb_msgs.RoahRsbbBeacon.devices_blinds)
}

// required bool devices_door_win_detect = 16;
inline bool RoahRsbbBeacon::has_devices_door_win_detect() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void RoahRsbbBeacon::set_has_devices_door_win_detect() {
  _has_bits_[0] |= 0x00000080u;
}
inline void RoahRsbbBeacon::clear_has_devices_door_win_detect() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void RoahRsbbBeacon::clear_devices_door_win_detect() {
  devices_door_win_detect_ = false;
  clear_has_devices_door_win_detect();
}
inline bool RoahRsbbBeacon::devices_door_win_detect() const {
  // @@protoc_insertion_point(field_get:roah_rsbb_msgs.RoahRsbbBeacon.devices_door_win_detect)
  return devices_door_win_detect_;
}
inline void RoahRsbbBeacon::set_devices_door_win_detect(bool value) {
  set_has_devices_door_win_detect();
  devices_door_win_detect_ = value;
  // @@protoc_insertion_point(field_set:roah_rsbb_msgs.RoahRsbbBeacon.devices_door_win_detect)
}

// required bool tablet_display_map = 20;
inline bool RoahRsbbBeacon::has_tablet_display_map() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void RoahRsbbBeacon::set_has_tablet_display_map() {
  _has_bits_[0] |= 0x00000100u;
}
inline void RoahRsbbBeacon::clear_has_tablet_display_map() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void RoahRsbbBeacon::clear_tablet_display_map() {
  tablet_display_map_ = false;
  clear_has_tablet_display_map();
}
inline bool RoahRsbbBeacon::tablet_display_map() const {
  // @@protoc_insertion_point(field_get:roah_rsbb_msgs.RoahRsbbBeacon.tablet_display_map)
  return tablet_display_map_;
}
inline void RoahRsbbBeacon::set_tablet_display_map(bool value) {
  set_has_tablet_display_map();
  tablet_display_map_ = value;
  // @@protoc_insertion_point(field_set:roah_rsbb_msgs.RoahRsbbBeacon.tablet_display_map)
}

// required .roah_rsbb_msgs.Time tablet_call_time = 21;
inline bool RoahRsbbBeacon::has_tablet_call_time() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void RoahRsbbBeacon::set_has_tablet_call_time() {
  _has_bits_[0] |= 0x00000200u;
}
inline void RoahRsbbBeacon::clear_has_tablet_call_time() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void RoahRsbbBeacon::clear_tablet_call_time() {
  if (tablet_call_time_ != NULL) tablet_call_time_->::roah_rsbb_msgs::Time::Clear();
  clear_has_tablet_call_time();
}
inline const ::roah_rsbb_msgs::Time& RoahRsbbBeacon::tablet_call_time() const {
  // @@protoc_insertion_point(field_get:roah_rsbb_msgs.RoahRsbbBeacon.tablet_call_time)
  return tablet_call_time_ != NULL ? *tablet_call_time_ : *default_instance_->tablet_call_time_;
}
inline ::roah_rsbb_msgs::Time* RoahRsbbBeacon::mutable_tablet_call_time() {
  set_has_tablet_call_time();
  if (tablet_call_time_ == NULL) {
    tablet_call_time_ = new ::roah_rsbb_msgs::Time;
  }
  // @@protoc_insertion_point(field_mutable:roah_rsbb_msgs.RoahRsbbBeacon.tablet_call_time)
  return tablet_call_time_;
}
inline ::roah_rsbb_msgs::Time* RoahRsbbBeacon::release_tablet_call_time() {
  // @@protoc_insertion_point(field_release:roah_rsbb_msgs.RoahRsbbBeacon.tablet_call_time)
  clear_has_tablet_call_time();
  ::roah_rsbb_msgs::Time* temp = tablet_call_time_;
  tablet_call_time_ = NULL;
  return temp;
}
inline void RoahRsbbBeacon::set_allocated_tablet_call_time(::roah_rsbb_msgs::Time* tablet_call_time) {
  delete tablet_call_time_;
  tablet_call_time_ = tablet_call_time;
  if (tablet_call_time) {
    set_has_tablet_call_time();
  } else {
    clear_has_tablet_call_time();
  }
  // @@protoc_insertion_point(field_set_allocated:roah_rsbb_msgs.RoahRsbbBeacon.tablet_call_time)
}

// required .roah_rsbb_msgs.Time tablet_position_time = 22;
inline bool RoahRsbbBeacon::has_tablet_position_time() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void RoahRsbbBeacon::set_has_tablet_position_time() {
  _has_bits_[0] |= 0x00000400u;
}
inline void RoahRsbbBeacon::clear_has_tablet_position_time() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void RoahRsbbBeacon::clear_tablet_position_time() {
  if (tablet_position_time_ != NULL) tablet_position_time_->::roah_rsbb_msgs::Time::Clear();
  clear_has_tablet_position_time();
}
inline const ::roah_rsbb_msgs::Time& RoahRsbbBeacon::tablet_position_time() const {
  // @@protoc_insertion_point(field_get:roah_rsbb_msgs.RoahRsbbBeacon.tablet_position_time)
  return tablet_position_time_ != NULL ? *tablet_position_time_ : *default_instance_->tablet_position_time_;
}
inline ::roah_rsbb_msgs::Time* RoahRsbbBeacon::mutable_tablet_position_time() {
  set_has_tablet_position_time();
  if (tablet_position_time_ == NULL) {
    tablet_position_time_ = new ::roah_rsbb_msgs::Time;
  }
  // @@protoc_insertion_point(field_mutable:roah_rsbb_msgs.RoahRsbbBeacon.tablet_position_time)
  return tablet_position_time_;
}
inline ::roah_rsbb_msgs::Time* RoahRsbbBeacon::release_tablet_position_time() {
  // @@protoc_insertion_point(field_release:roah_rsbb_msgs.RoahRsbbBeacon.tablet_position_time)
  clear_has_tablet_position_time();
  ::roah_rsbb_msgs::Time* temp = tablet_position_time_;
  tablet_position_time_ = NULL;
  return temp;
}
inline void RoahRsbbBeacon::set_allocated_tablet_position_time(::roah_rsbb_msgs::Time* tablet_position_time) {
  delete tablet_position_time_;
  tablet_position_time_ = tablet_position_time;
  if (tablet_position_time) {
    set_has_tablet_position_time();
  } else {
    clear_has_tablet_position_time();
  }
  // @@protoc_insertion_point(field_set_allocated:roah_rsbb_msgs.RoahRsbbBeacon.tablet_position_time)
}

// required double tablet_position_x = 23;
inline bool RoahRsbbBeacon::has_tablet_position_x() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void RoahRsbbBeacon::set_has_tablet_position_x() {
  _has_bits_[0] |= 0x00000800u;
}
inline void RoahRsbbBeacon::clear_has_tablet_position_x() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void RoahRsbbBeacon::clear_tablet_position_x() {
  tablet_position_x_ = 0;
  clear_has_tablet_position_x();
}
inline double RoahRsbbBeacon::tablet_position_x() const {
  // @@protoc_insertion_point(field_get:roah_rsbb_msgs.RoahRsbbBeacon.tablet_position_x)
  return tablet_position_x_;
}
inline void RoahRsbbBeacon::set_tablet_position_x(double value) {
  set_has_tablet_position_x();
  tablet_position_x_ = value;
  // @@protoc_insertion_point(field_set:roah_rsbb_msgs.RoahRsbbBeacon.tablet_position_x)
}

// required double tablet_position_y = 24;
inline bool RoahRsbbBeacon::has_tablet_position_y() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void RoahRsbbBeacon::set_has_tablet_position_y() {
  _has_bits_[0] |= 0x00001000u;
}
inline void RoahRsbbBeacon::clear_has_tablet_position_y() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void RoahRsbbBeacon::clear_tablet_position_y() {
  tablet_position_y_ = 0;
  clear_has_tablet_position_y();
}
inline double RoahRsbbBeacon::tablet_position_y() const {
  // @@protoc_insertion_point(field_get:roah_rsbb_msgs.RoahRsbbBeacon.tablet_position_y)
  return tablet_position_y_;
}
inline void RoahRsbbBeacon::set_tablet_position_y(double value) {
  set_has_tablet_position_y();
  tablet_position_y_ = value;
  // @@protoc_insertion_point(field_set:roah_rsbb_msgs.RoahRsbbBeacon.tablet_position_y)
}

// -------------------------------------------------------------------

// BenchmarkingTeam

// required string team_name = 1;
inline bool BenchmarkingTeam::has_team_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BenchmarkingTeam::set_has_team_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BenchmarkingTeam::clear_has_team_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BenchmarkingTeam::clear_team_name() {
  team_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_team_name();
}
inline const ::std::string& BenchmarkingTeam::team_name() const {
  // @@protoc_insertion_point(field_get:roah_rsbb_msgs.BenchmarkingTeam.team_name)
  return team_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BenchmarkingTeam::set_team_name(const ::std::string& value) {
  set_has_team_name();
  team_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:roah_rsbb_msgs.BenchmarkingTeam.team_name)
}
inline void BenchmarkingTeam::set_team_name(const char* value) {
  set_has_team_name();
  team_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:roah_rsbb_msgs.BenchmarkingTeam.team_name)
}
inline void BenchmarkingTeam::set_team_name(const char* value, size_t size) {
  set_has_team_name();
  team_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:roah_rsbb_msgs.BenchmarkingTeam.team_name)
}
inline ::std::string* BenchmarkingTeam::mutable_team_name() {
  set_has_team_name();
  // @@protoc_insertion_point(field_mutable:roah_rsbb_msgs.BenchmarkingTeam.team_name)
  return team_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BenchmarkingTeam::release_team_name() {
  // @@protoc_insertion_point(field_release:roah_rsbb_msgs.BenchmarkingTeam.team_name)
  clear_has_team_name();
  return team_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BenchmarkingTeam::set_allocated_team_name(::std::string* team_name) {
  if (team_name != NULL) {
    set_has_team_name();
  } else {
    clear_has_team_name();
  }
  team_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), team_name);
  // @@protoc_insertion_point(field_set_allocated:roah_rsbb_msgs.BenchmarkingTeam.team_name)
}

// required string robot_name = 2;
inline bool BenchmarkingTeam::has_robot_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BenchmarkingTeam::set_has_robot_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BenchmarkingTeam::clear_has_robot_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BenchmarkingTeam::clear_robot_name() {
  robot_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_robot_name();
}
inline const ::std::string& BenchmarkingTeam::robot_name() const {
  // @@protoc_insertion_point(field_get:roah_rsbb_msgs.BenchmarkingTeam.robot_name)
  return robot_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BenchmarkingTeam::set_robot_name(const ::std::string& value) {
  set_has_robot_name();
  robot_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:roah_rsbb_msgs.BenchmarkingTeam.robot_name)
}
inline void BenchmarkingTeam::set_robot_name(const char* value) {
  set_has_robot_name();
  robot_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:roah_rsbb_msgs.BenchmarkingTeam.robot_name)
}
inline void BenchmarkingTeam::set_robot_name(const char* value, size_t size) {
  set_has_robot_name();
  robot_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:roah_rsbb_msgs.BenchmarkingTeam.robot_name)
}
inline ::std::string* BenchmarkingTeam::mutable_robot_name() {
  set_has_robot_name();
  // @@protoc_insertion_point(field_mutable:roah_rsbb_msgs.BenchmarkingTeam.robot_name)
  return robot_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BenchmarkingTeam::release_robot_name() {
  // @@protoc_insertion_point(field_release:roah_rsbb_msgs.BenchmarkingTeam.robot_name)
  clear_has_robot_name();
  return robot_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BenchmarkingTeam::set_allocated_robot_name(::std::string* robot_name) {
  if (robot_name != NULL) {
    set_has_robot_name();
  } else {
    clear_has_robot_name();
  }
  robot_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), robot_name);
  // @@protoc_insertion_point(field_set_allocated:roah_rsbb_msgs.BenchmarkingTeam.robot_name)
}

// required uint32 rsbb_port = 3;
inline bool BenchmarkingTeam::has_rsbb_port() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BenchmarkingTeam::set_has_rsbb_port() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BenchmarkingTeam::clear_has_rsbb_port() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BenchmarkingTeam::clear_rsbb_port() {
  rsbb_port_ = 0u;
  clear_has_rsbb_port();
}
inline ::google::protobuf::uint32 BenchmarkingTeam::rsbb_port() const {
  // @@protoc_insertion_point(field_get:roah_rsbb_msgs.BenchmarkingTeam.rsbb_port)
  return rsbb_port_;
}
inline void BenchmarkingTeam::set_rsbb_port(::google::protobuf::uint32 value) {
  set_has_rsbb_port();
  rsbb_port_ = value;
  // @@protoc_insertion_point(field_set:roah_rsbb_msgs.BenchmarkingTeam.rsbb_port)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace roah_rsbb_msgs

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::roah_rsbb_msgs::RoahRsbbBeacon_CompType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::roah_rsbb_msgs::RoahRsbbBeacon_CompType>() {
  return ::roah_rsbb_msgs::RoahRsbbBeacon_CompType_descriptor();
}
template <> struct is_proto_enum< ::roah_rsbb_msgs::BenchmarkingTeam_CompType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::roah_rsbb_msgs::BenchmarkingTeam_CompType>() {
  return ::roah_rsbb_msgs::BenchmarkingTeam_CompType_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_RoahRsbbBeacon_2eproto__INCLUDED
