// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: RobotState.proto

#ifndef PROTOBUF_RobotState_2eproto__INCLUDED
#define PROTOBUF_RobotState_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "Time.pb.h"
// @@protoc_insertion_point(includes)

namespace roah_rsbb_msgs {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_RobotState_2eproto();
void protobuf_AssignDesc_RobotState_2eproto();
void protobuf_ShutdownFile_RobotState_2eproto();

class RobotState;

enum RobotState_CompType {
  RobotState_CompType_COMP_ID = 6666,
  RobotState_CompType_MSG_TYPE = 40
};
bool RobotState_CompType_IsValid(int value);
const RobotState_CompType RobotState_CompType_CompType_MIN = RobotState_CompType_MSG_TYPE;
const RobotState_CompType RobotState_CompType_CompType_MAX = RobotState_CompType_COMP_ID;
const int RobotState_CompType_CompType_ARRAYSIZE = RobotState_CompType_CompType_MAX + 1;

const ::google::protobuf::EnumDescriptor* RobotState_CompType_descriptor();
inline const ::std::string& RobotState_CompType_Name(RobotState_CompType value) {
  return ::google::protobuf::internal::NameOfEnum(
    RobotState_CompType_descriptor(), value);
}
inline bool RobotState_CompType_Parse(
    const ::std::string& name, RobotState_CompType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RobotState_CompType>(
    RobotState_CompType_descriptor(), name, value);
}
enum RobotState_State {
  RobotState_State_STOP = 0,
  RobotState_State_PREPARING = 1,
  RobotState_State_WAITING_GOAL = 2,
  RobotState_State_EXECUTING = 3,
  RobotState_State_RESULT_TX = 4
};
bool RobotState_State_IsValid(int value);
const RobotState_State RobotState_State_State_MIN = RobotState_State_STOP;
const RobotState_State RobotState_State_State_MAX = RobotState_State_RESULT_TX;
const int RobotState_State_State_ARRAYSIZE = RobotState_State_State_MAX + 1;

const ::google::protobuf::EnumDescriptor* RobotState_State_descriptor();
inline const ::std::string& RobotState_State_Name(RobotState_State value) {
  return ::google::protobuf::internal::NameOfEnum(
    RobotState_State_descriptor(), value);
}
inline bool RobotState_State_Parse(
    const ::std::string& name, RobotState_State* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RobotState_State>(
    RobotState_State_descriptor(), name, value);
}
// ===================================================================

class RobotState : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:roah_rsbb_msgs.RobotState) */ {
 public:
  RobotState();
  virtual ~RobotState();

  RobotState(const RobotState& from);

  inline RobotState& operator=(const RobotState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RobotState& default_instance();

  void Swap(RobotState* other);

  // implements Message ----------------------------------------------

  inline RobotState* New() const { return New(NULL); }

  RobotState* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RobotState& from);
  void MergeFrom(const RobotState& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RobotState* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef RobotState_CompType CompType;
  static const CompType COMP_ID =
    RobotState_CompType_COMP_ID;
  static const CompType MSG_TYPE =
    RobotState_CompType_MSG_TYPE;
  static inline bool CompType_IsValid(int value) {
    return RobotState_CompType_IsValid(value);
  }
  static const CompType CompType_MIN =
    RobotState_CompType_CompType_MIN;
  static const CompType CompType_MAX =
    RobotState_CompType_CompType_MAX;
  static const int CompType_ARRAYSIZE =
    RobotState_CompType_CompType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CompType_descriptor() {
    return RobotState_CompType_descriptor();
  }
  static inline const ::std::string& CompType_Name(CompType value) {
    return RobotState_CompType_Name(value);
  }
  static inline bool CompType_Parse(const ::std::string& name,
      CompType* value) {
    return RobotState_CompType_Parse(name, value);
  }

  typedef RobotState_State State;
  static const State STOP =
    RobotState_State_STOP;
  static const State PREPARING =
    RobotState_State_PREPARING;
  static const State WAITING_GOAL =
    RobotState_State_WAITING_GOAL;
  static const State EXECUTING =
    RobotState_State_EXECUTING;
  static const State RESULT_TX =
    RobotState_State_RESULT_TX;
  static inline bool State_IsValid(int value) {
    return RobotState_State_IsValid(value);
  }
  static const State State_MIN =
    RobotState_State_State_MIN;
  static const State State_MAX =
    RobotState_State_State_MAX;
  static const int State_ARRAYSIZE =
    RobotState_State_State_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  State_descriptor() {
    return RobotState_State_descriptor();
  }
  static inline const ::std::string& State_Name(State value) {
    return RobotState_State_Name(value);
  }
  static inline bool State_Parse(const ::std::string& name,
      State* value) {
    return RobotState_State_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .roah_rsbb_msgs.Time time = 1;
  bool has_time() const;
  void clear_time();
  static const int kTimeFieldNumber = 1;
  const ::roah_rsbb_msgs::Time& time() const;
  ::roah_rsbb_msgs::Time* mutable_time();
  ::roah_rsbb_msgs::Time* release_time();
  void set_allocated_time(::roah_rsbb_msgs::Time* time);

  // required uint32 messages_saved = 2;
  bool has_messages_saved() const;
  void clear_messages_saved();
  static const int kMessagesSavedFieldNumber = 2;
  ::google::protobuf::uint32 messages_saved() const;
  void set_messages_saved(::google::protobuf::uint32 value);

  // required .roah_rsbb_msgs.RobotState.State robot_state = 3;
  bool has_robot_state() const;
  void clear_robot_state();
  static const int kRobotStateFieldNumber = 3;
  ::roah_rsbb_msgs::RobotState_State robot_state() const;
  void set_robot_state(::roah_rsbb_msgs::RobotState_State value);

  // repeated string notifications = 8;
  int notifications_size() const;
  void clear_notifications();
  static const int kNotificationsFieldNumber = 8;
  const ::std::string& notifications(int index) const;
  ::std::string* mutable_notifications(int index);
  void set_notifications(int index, const ::std::string& value);
  void set_notifications(int index, const char* value);
  void set_notifications(int index, const char* value, size_t size);
  ::std::string* add_notifications();
  void add_notifications(const ::std::string& value);
  void add_notifications(const char* value);
  void add_notifications(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& notifications() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_notifications();

  // repeated string activation_event = 9;
  int activation_event_size() const;
  void clear_activation_event();
  static const int kActivationEventFieldNumber = 9;
  const ::std::string& activation_event(int index) const;
  ::std::string* mutable_activation_event(int index);
  void set_activation_event(int index, const ::std::string& value);
  void set_activation_event(int index, const char* value);
  void set_activation_event(int index, const char* value, size_t size);
  ::std::string* add_activation_event();
  void add_activation_event(const ::std::string& value);
  void add_activation_event(const char* value);
  void add_activation_event(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& activation_event() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_activation_event();

  // repeated string visitor = 10;
  int visitor_size() const;
  void clear_visitor();
  static const int kVisitorFieldNumber = 10;
  const ::std::string& visitor(int index) const;
  ::std::string* mutable_visitor(int index);
  void set_visitor(int index, const ::std::string& value);
  void set_visitor(int index, const char* value);
  void set_visitor(int index, const char* value, size_t size);
  ::std::string* add_visitor();
  void add_visitor(const ::std::string& value);
  void add_visitor(const char* value);
  void add_visitor(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& visitor() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_visitor();

  // repeated string final_command = 16;
  int final_command_size() const;
  void clear_final_command();
  static const int kFinalCommandFieldNumber = 16;
  const ::std::string& final_command(int index) const;
  ::std::string* mutable_final_command(int index);
  void set_final_command(int index, const ::std::string& value);
  void set_final_command(int index, const char* value);
  void set_final_command(int index, const char* value, size_t size);
  ::std::string* add_final_command();
  void add_final_command(const ::std::string& value);
  void add_final_command(const char* value);
  void add_final_command(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& final_command() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_final_command();

  // optional bool devices_switch_1 = 17;
  bool has_devices_switch_1() const;
  void clear_devices_switch_1();
  static const int kDevicesSwitch1FieldNumber = 17;
  bool devices_switch_1() const;
  void set_devices_switch_1(bool value);

  // optional bool devices_switch_2 = 18;
  bool has_devices_switch_2() const;
  void clear_devices_switch_2();
  static const int kDevicesSwitch2FieldNumber = 18;
  bool devices_switch_2() const;
  void set_devices_switch_2(bool value);

  // optional bool devices_switch_3 = 19;
  bool has_devices_switch_3() const;
  void clear_devices_switch_3();
  static const int kDevicesSwitch3FieldNumber = 19;
  bool devices_switch_3() const;
  void set_devices_switch_3(bool value);

  // optional uint32 devices_dimmer = 20;
  bool has_devices_dimmer() const;
  void clear_devices_dimmer();
  static const int kDevicesDimmerFieldNumber = 20;
  ::google::protobuf::uint32 devices_dimmer() const;
  void set_devices_dimmer(::google::protobuf::uint32 value);

  // optional uint32 devices_blinds = 21;
  bool has_devices_blinds() const;
  void clear_devices_blinds();
  static const int kDevicesBlindsFieldNumber = 21;
  ::google::protobuf::uint32 devices_blinds() const;
  void set_devices_blinds(::google::protobuf::uint32 value);

  // optional bool tablet_display_map = 22;
  bool has_tablet_display_map() const;
  void clear_tablet_display_map();
  static const int kTabletDisplayMapFieldNumber = 22;
  bool tablet_display_map() const;
  void set_tablet_display_map(bool value);

  // optional string generic_result = 23;
  bool has_generic_result() const;
  void clear_generic_result();
  static const int kGenericResultFieldNumber = 23;
  const ::std::string& generic_result() const;
  void set_generic_result(const ::std::string& value);
  void set_generic_result(const char* value);
  void set_generic_result(const char* value, size_t size);
  ::std::string* mutable_generic_result();
  ::std::string* release_generic_result();
  void set_allocated_generic_result(::std::string* generic_result);

  // @@protoc_insertion_point(class_scope:roah_rsbb_msgs.RobotState)
 private:
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_messages_saved();
  inline void clear_has_messages_saved();
  inline void set_has_robot_state();
  inline void clear_has_robot_state();
  inline void set_has_devices_switch_1();
  inline void clear_has_devices_switch_1();
  inline void set_has_devices_switch_2();
  inline void clear_has_devices_switch_2();
  inline void set_has_devices_switch_3();
  inline void clear_has_devices_switch_3();
  inline void set_has_devices_dimmer();
  inline void clear_has_devices_dimmer();
  inline void set_has_devices_blinds();
  inline void clear_has_devices_blinds();
  inline void set_has_tablet_display_map();
  inline void clear_has_tablet_display_map();
  inline void set_has_generic_result();
  inline void clear_has_generic_result();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::roah_rsbb_msgs::Time* time_;
  ::google::protobuf::uint32 messages_saved_;
  int robot_state_;
  ::google::protobuf::RepeatedPtrField< ::std::string> notifications_;
  ::google::protobuf::RepeatedPtrField< ::std::string> activation_event_;
  ::google::protobuf::RepeatedPtrField< ::std::string> visitor_;
  ::google::protobuf::RepeatedPtrField< ::std::string> final_command_;
  bool devices_switch_1_;
  bool devices_switch_2_;
  bool devices_switch_3_;
  bool tablet_display_map_;
  ::google::protobuf::uint32 devices_dimmer_;
  ::google::protobuf::internal::ArenaStringPtr generic_result_;
  ::google::protobuf::uint32 devices_blinds_;
  friend void  protobuf_AddDesc_RobotState_2eproto();
  friend void protobuf_AssignDesc_RobotState_2eproto();
  friend void protobuf_ShutdownFile_RobotState_2eproto();

  void InitAsDefaultInstance();
  static RobotState* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// RobotState

// required .roah_rsbb_msgs.Time time = 1;
inline bool RobotState::has_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RobotState::set_has_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RobotState::clear_has_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RobotState::clear_time() {
  if (time_ != NULL) time_->::roah_rsbb_msgs::Time::Clear();
  clear_has_time();
}
inline const ::roah_rsbb_msgs::Time& RobotState::time() const {
  // @@protoc_insertion_point(field_get:roah_rsbb_msgs.RobotState.time)
  return time_ != NULL ? *time_ : *default_instance_->time_;
}
inline ::roah_rsbb_msgs::Time* RobotState::mutable_time() {
  set_has_time();
  if (time_ == NULL) {
    time_ = new ::roah_rsbb_msgs::Time;
  }
  // @@protoc_insertion_point(field_mutable:roah_rsbb_msgs.RobotState.time)
  return time_;
}
inline ::roah_rsbb_msgs::Time* RobotState::release_time() {
  // @@protoc_insertion_point(field_release:roah_rsbb_msgs.RobotState.time)
  clear_has_time();
  ::roah_rsbb_msgs::Time* temp = time_;
  time_ = NULL;
  return temp;
}
inline void RobotState::set_allocated_time(::roah_rsbb_msgs::Time* time) {
  delete time_;
  time_ = time;
  if (time) {
    set_has_time();
  } else {
    clear_has_time();
  }
  // @@protoc_insertion_point(field_set_allocated:roah_rsbb_msgs.RobotState.time)
}

// required uint32 messages_saved = 2;
inline bool RobotState::has_messages_saved() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RobotState::set_has_messages_saved() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RobotState::clear_has_messages_saved() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RobotState::clear_messages_saved() {
  messages_saved_ = 0u;
  clear_has_messages_saved();
}
inline ::google::protobuf::uint32 RobotState::messages_saved() const {
  // @@protoc_insertion_point(field_get:roah_rsbb_msgs.RobotState.messages_saved)
  return messages_saved_;
}
inline void RobotState::set_messages_saved(::google::protobuf::uint32 value) {
  set_has_messages_saved();
  messages_saved_ = value;
  // @@protoc_insertion_point(field_set:roah_rsbb_msgs.RobotState.messages_saved)
}

// required .roah_rsbb_msgs.RobotState.State robot_state = 3;
inline bool RobotState::has_robot_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RobotState::set_has_robot_state() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RobotState::clear_has_robot_state() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RobotState::clear_robot_state() {
  robot_state_ = 0;
  clear_has_robot_state();
}
inline ::roah_rsbb_msgs::RobotState_State RobotState::robot_state() const {
  // @@protoc_insertion_point(field_get:roah_rsbb_msgs.RobotState.robot_state)
  return static_cast< ::roah_rsbb_msgs::RobotState_State >(robot_state_);
}
inline void RobotState::set_robot_state(::roah_rsbb_msgs::RobotState_State value) {
  assert(::roah_rsbb_msgs::RobotState_State_IsValid(value));
  set_has_robot_state();
  robot_state_ = value;
  // @@protoc_insertion_point(field_set:roah_rsbb_msgs.RobotState.robot_state)
}

// repeated string notifications = 8;
inline int RobotState::notifications_size() const {
  return notifications_.size();
}
inline void RobotState::clear_notifications() {
  notifications_.Clear();
}
inline const ::std::string& RobotState::notifications(int index) const {
  // @@protoc_insertion_point(field_get:roah_rsbb_msgs.RobotState.notifications)
  return notifications_.Get(index);
}
inline ::std::string* RobotState::mutable_notifications(int index) {
  // @@protoc_insertion_point(field_mutable:roah_rsbb_msgs.RobotState.notifications)
  return notifications_.Mutable(index);
}
inline void RobotState::set_notifications(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:roah_rsbb_msgs.RobotState.notifications)
  notifications_.Mutable(index)->assign(value);
}
inline void RobotState::set_notifications(int index, const char* value) {
  notifications_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:roah_rsbb_msgs.RobotState.notifications)
}
inline void RobotState::set_notifications(int index, const char* value, size_t size) {
  notifications_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:roah_rsbb_msgs.RobotState.notifications)
}
inline ::std::string* RobotState::add_notifications() {
  // @@protoc_insertion_point(field_add_mutable:roah_rsbb_msgs.RobotState.notifications)
  return notifications_.Add();
}
inline void RobotState::add_notifications(const ::std::string& value) {
  notifications_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:roah_rsbb_msgs.RobotState.notifications)
}
inline void RobotState::add_notifications(const char* value) {
  notifications_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:roah_rsbb_msgs.RobotState.notifications)
}
inline void RobotState::add_notifications(const char* value, size_t size) {
  notifications_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:roah_rsbb_msgs.RobotState.notifications)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
RobotState::notifications() const {
  // @@protoc_insertion_point(field_list:roah_rsbb_msgs.RobotState.notifications)
  return notifications_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
RobotState::mutable_notifications() {
  // @@protoc_insertion_point(field_mutable_list:roah_rsbb_msgs.RobotState.notifications)
  return &notifications_;
}

// repeated string activation_event = 9;
inline int RobotState::activation_event_size() const {
  return activation_event_.size();
}
inline void RobotState::clear_activation_event() {
  activation_event_.Clear();
}
inline const ::std::string& RobotState::activation_event(int index) const {
  // @@protoc_insertion_point(field_get:roah_rsbb_msgs.RobotState.activation_event)
  return activation_event_.Get(index);
}
inline ::std::string* RobotState::mutable_activation_event(int index) {
  // @@protoc_insertion_point(field_mutable:roah_rsbb_msgs.RobotState.activation_event)
  return activation_event_.Mutable(index);
}
inline void RobotState::set_activation_event(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:roah_rsbb_msgs.RobotState.activation_event)
  activation_event_.Mutable(index)->assign(value);
}
inline void RobotState::set_activation_event(int index, const char* value) {
  activation_event_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:roah_rsbb_msgs.RobotState.activation_event)
}
inline void RobotState::set_activation_event(int index, const char* value, size_t size) {
  activation_event_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:roah_rsbb_msgs.RobotState.activation_event)
}
inline ::std::string* RobotState::add_activation_event() {
  // @@protoc_insertion_point(field_add_mutable:roah_rsbb_msgs.RobotState.activation_event)
  return activation_event_.Add();
}
inline void RobotState::add_activation_event(const ::std::string& value) {
  activation_event_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:roah_rsbb_msgs.RobotState.activation_event)
}
inline void RobotState::add_activation_event(const char* value) {
  activation_event_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:roah_rsbb_msgs.RobotState.activation_event)
}
inline void RobotState::add_activation_event(const char* value, size_t size) {
  activation_event_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:roah_rsbb_msgs.RobotState.activation_event)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
RobotState::activation_event() const {
  // @@protoc_insertion_point(field_list:roah_rsbb_msgs.RobotState.activation_event)
  return activation_event_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
RobotState::mutable_activation_event() {
  // @@protoc_insertion_point(field_mutable_list:roah_rsbb_msgs.RobotState.activation_event)
  return &activation_event_;
}

// repeated string visitor = 10;
inline int RobotState::visitor_size() const {
  return visitor_.size();
}
inline void RobotState::clear_visitor() {
  visitor_.Clear();
}
inline const ::std::string& RobotState::visitor(int index) const {
  // @@protoc_insertion_point(field_get:roah_rsbb_msgs.RobotState.visitor)
  return visitor_.Get(index);
}
inline ::std::string* RobotState::mutable_visitor(int index) {
  // @@protoc_insertion_point(field_mutable:roah_rsbb_msgs.RobotState.visitor)
  return visitor_.Mutable(index);
}
inline void RobotState::set_visitor(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:roah_rsbb_msgs.RobotState.visitor)
  visitor_.Mutable(index)->assign(value);
}
inline void RobotState::set_visitor(int index, const char* value) {
  visitor_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:roah_rsbb_msgs.RobotState.visitor)
}
inline void RobotState::set_visitor(int index, const char* value, size_t size) {
  visitor_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:roah_rsbb_msgs.RobotState.visitor)
}
inline ::std::string* RobotState::add_visitor() {
  // @@protoc_insertion_point(field_add_mutable:roah_rsbb_msgs.RobotState.visitor)
  return visitor_.Add();
}
inline void RobotState::add_visitor(const ::std::string& value) {
  visitor_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:roah_rsbb_msgs.RobotState.visitor)
}
inline void RobotState::add_visitor(const char* value) {
  visitor_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:roah_rsbb_msgs.RobotState.visitor)
}
inline void RobotState::add_visitor(const char* value, size_t size) {
  visitor_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:roah_rsbb_msgs.RobotState.visitor)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
RobotState::visitor() const {
  // @@protoc_insertion_point(field_list:roah_rsbb_msgs.RobotState.visitor)
  return visitor_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
RobotState::mutable_visitor() {
  // @@protoc_insertion_point(field_mutable_list:roah_rsbb_msgs.RobotState.visitor)
  return &visitor_;
}

// repeated string final_command = 16;
inline int RobotState::final_command_size() const {
  return final_command_.size();
}
inline void RobotState::clear_final_command() {
  final_command_.Clear();
}
inline const ::std::string& RobotState::final_command(int index) const {
  // @@protoc_insertion_point(field_get:roah_rsbb_msgs.RobotState.final_command)
  return final_command_.Get(index);
}
inline ::std::string* RobotState::mutable_final_command(int index) {
  // @@protoc_insertion_point(field_mutable:roah_rsbb_msgs.RobotState.final_command)
  return final_command_.Mutable(index);
}
inline void RobotState::set_final_command(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:roah_rsbb_msgs.RobotState.final_command)
  final_command_.Mutable(index)->assign(value);
}
inline void RobotState::set_final_command(int index, const char* value) {
  final_command_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:roah_rsbb_msgs.RobotState.final_command)
}
inline void RobotState::set_final_command(int index, const char* value, size_t size) {
  final_command_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:roah_rsbb_msgs.RobotState.final_command)
}
inline ::std::string* RobotState::add_final_command() {
  // @@protoc_insertion_point(field_add_mutable:roah_rsbb_msgs.RobotState.final_command)
  return final_command_.Add();
}
inline void RobotState::add_final_command(const ::std::string& value) {
  final_command_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:roah_rsbb_msgs.RobotState.final_command)
}
inline void RobotState::add_final_command(const char* value) {
  final_command_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:roah_rsbb_msgs.RobotState.final_command)
}
inline void RobotState::add_final_command(const char* value, size_t size) {
  final_command_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:roah_rsbb_msgs.RobotState.final_command)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
RobotState::final_command() const {
  // @@protoc_insertion_point(field_list:roah_rsbb_msgs.RobotState.final_command)
  return final_command_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
RobotState::mutable_final_command() {
  // @@protoc_insertion_point(field_mutable_list:roah_rsbb_msgs.RobotState.final_command)
  return &final_command_;
}

// optional bool devices_switch_1 = 17;
inline bool RobotState::has_devices_switch_1() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void RobotState::set_has_devices_switch_1() {
  _has_bits_[0] |= 0x00000080u;
}
inline void RobotState::clear_has_devices_switch_1() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void RobotState::clear_devices_switch_1() {
  devices_switch_1_ = false;
  clear_has_devices_switch_1();
}
inline bool RobotState::devices_switch_1() const {
  // @@protoc_insertion_point(field_get:roah_rsbb_msgs.RobotState.devices_switch_1)
  return devices_switch_1_;
}
inline void RobotState::set_devices_switch_1(bool value) {
  set_has_devices_switch_1();
  devices_switch_1_ = value;
  // @@protoc_insertion_point(field_set:roah_rsbb_msgs.RobotState.devices_switch_1)
}

// optional bool devices_switch_2 = 18;
inline bool RobotState::has_devices_switch_2() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void RobotState::set_has_devices_switch_2() {
  _has_bits_[0] |= 0x00000100u;
}
inline void RobotState::clear_has_devices_switch_2() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void RobotState::clear_devices_switch_2() {
  devices_switch_2_ = false;
  clear_has_devices_switch_2();
}
inline bool RobotState::devices_switch_2() const {
  // @@protoc_insertion_point(field_get:roah_rsbb_msgs.RobotState.devices_switch_2)
  return devices_switch_2_;
}
inline void RobotState::set_devices_switch_2(bool value) {
  set_has_devices_switch_2();
  devices_switch_2_ = value;
  // @@protoc_insertion_point(field_set:roah_rsbb_msgs.RobotState.devices_switch_2)
}

// optional bool devices_switch_3 = 19;
inline bool RobotState::has_devices_switch_3() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void RobotState::set_has_devices_switch_3() {
  _has_bits_[0] |= 0x00000200u;
}
inline void RobotState::clear_has_devices_switch_3() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void RobotState::clear_devices_switch_3() {
  devices_switch_3_ = false;
  clear_has_devices_switch_3();
}
inline bool RobotState::devices_switch_3() const {
  // @@protoc_insertion_point(field_get:roah_rsbb_msgs.RobotState.devices_switch_3)
  return devices_switch_3_;
}
inline void RobotState::set_devices_switch_3(bool value) {
  set_has_devices_switch_3();
  devices_switch_3_ = value;
  // @@protoc_insertion_point(field_set:roah_rsbb_msgs.RobotState.devices_switch_3)
}

// optional uint32 devices_dimmer = 20;
inline bool RobotState::has_devices_dimmer() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void RobotState::set_has_devices_dimmer() {
  _has_bits_[0] |= 0x00000400u;
}
inline void RobotState::clear_has_devices_dimmer() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void RobotState::clear_devices_dimmer() {
  devices_dimmer_ = 0u;
  clear_has_devices_dimmer();
}
inline ::google::protobuf::uint32 RobotState::devices_dimmer() const {
  // @@protoc_insertion_point(field_get:roah_rsbb_msgs.RobotState.devices_dimmer)
  return devices_dimmer_;
}
inline void RobotState::set_devices_dimmer(::google::protobuf::uint32 value) {
  set_has_devices_dimmer();
  devices_dimmer_ = value;
  // @@protoc_insertion_point(field_set:roah_rsbb_msgs.RobotState.devices_dimmer)
}

// optional uint32 devices_blinds = 21;
inline bool RobotState::has_devices_blinds() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void RobotState::set_has_devices_blinds() {
  _has_bits_[0] |= 0x00000800u;
}
inline void RobotState::clear_has_devices_blinds() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void RobotState::clear_devices_blinds() {
  devices_blinds_ = 0u;
  clear_has_devices_blinds();
}
inline ::google::protobuf::uint32 RobotState::devices_blinds() const {
  // @@protoc_insertion_point(field_get:roah_rsbb_msgs.RobotState.devices_blinds)
  return devices_blinds_;
}
inline void RobotState::set_devices_blinds(::google::protobuf::uint32 value) {
  set_has_devices_blinds();
  devices_blinds_ = value;
  // @@protoc_insertion_point(field_set:roah_rsbb_msgs.RobotState.devices_blinds)
}

// optional bool tablet_display_map = 22;
inline bool RobotState::has_tablet_display_map() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void RobotState::set_has_tablet_display_map() {
  _has_bits_[0] |= 0x00001000u;
}
inline void RobotState::clear_has_tablet_display_map() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void RobotState::clear_tablet_display_map() {
  tablet_display_map_ = false;
  clear_has_tablet_display_map();
}
inline bool RobotState::tablet_display_map() const {
  // @@protoc_insertion_point(field_get:roah_rsbb_msgs.RobotState.tablet_display_map)
  return tablet_display_map_;
}
inline void RobotState::set_tablet_display_map(bool value) {
  set_has_tablet_display_map();
  tablet_display_map_ = value;
  // @@protoc_insertion_point(field_set:roah_rsbb_msgs.RobotState.tablet_display_map)
}

// optional string generic_result = 23;
inline bool RobotState::has_generic_result() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void RobotState::set_has_generic_result() {
  _has_bits_[0] |= 0x00002000u;
}
inline void RobotState::clear_has_generic_result() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void RobotState::clear_generic_result() {
  generic_result_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_generic_result();
}
inline const ::std::string& RobotState::generic_result() const {
  // @@protoc_insertion_point(field_get:roah_rsbb_msgs.RobotState.generic_result)
  return generic_result_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RobotState::set_generic_result(const ::std::string& value) {
  set_has_generic_result();
  generic_result_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:roah_rsbb_msgs.RobotState.generic_result)
}
inline void RobotState::set_generic_result(const char* value) {
  set_has_generic_result();
  generic_result_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:roah_rsbb_msgs.RobotState.generic_result)
}
inline void RobotState::set_generic_result(const char* value, size_t size) {
  set_has_generic_result();
  generic_result_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:roah_rsbb_msgs.RobotState.generic_result)
}
inline ::std::string* RobotState::mutable_generic_result() {
  set_has_generic_result();
  // @@protoc_insertion_point(field_mutable:roah_rsbb_msgs.RobotState.generic_result)
  return generic_result_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RobotState::release_generic_result() {
  // @@protoc_insertion_point(field_release:roah_rsbb_msgs.RobotState.generic_result)
  clear_has_generic_result();
  return generic_result_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RobotState::set_allocated_generic_result(::std::string* generic_result) {
  if (generic_result != NULL) {
    set_has_generic_result();
  } else {
    clear_has_generic_result();
  }
  generic_result_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), generic_result);
  // @@protoc_insertion_point(field_set_allocated:roah_rsbb_msgs.RobotState.generic_result)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace roah_rsbb_msgs

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::roah_rsbb_msgs::RobotState_CompType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::roah_rsbb_msgs::RobotState_CompType>() {
  return ::roah_rsbb_msgs::RobotState_CompType_descriptor();
}
template <> struct is_proto_enum< ::roah_rsbb_msgs::RobotState_State> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::roah_rsbb_msgs::RobotState_State>() {
  return ::roah_rsbb_msgs::RobotState_State_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_RobotState_2eproto__INCLUDED
