// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BenchmarkState.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "BenchmarkState.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace roah_rsbb_msgs {

namespace {

const ::google::protobuf::Descriptor* BenchmarkState_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BenchmarkState_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* BenchmarkState_CompType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* BenchmarkState_State_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_BenchmarkState_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_BenchmarkState_2eproto() {
  protobuf_AddDesc_BenchmarkState_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "BenchmarkState.proto");
  GOOGLE_CHECK(file != NULL);
  BenchmarkState_descriptor_ = file->message_type(0);
  static const int BenchmarkState_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BenchmarkState, benchmark_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BenchmarkState, benchmark_state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BenchmarkState, acknowledgement_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BenchmarkState, target_pose_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BenchmarkState, target_pose_y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BenchmarkState, target_pose_theta_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BenchmarkState, generic_goal_),
  };
  BenchmarkState_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BenchmarkState_descriptor_,
      BenchmarkState::default_instance_,
      BenchmarkState_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BenchmarkState, _has_bits_[0]),
      -1,
      -1,
      sizeof(BenchmarkState),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BenchmarkState, _internal_metadata_),
      -1);
  BenchmarkState_CompType_descriptor_ = BenchmarkState_descriptor_->enum_type(0);
  BenchmarkState_State_descriptor_ = BenchmarkState_descriptor_->enum_type(1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_BenchmarkState_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BenchmarkState_descriptor_, &BenchmarkState::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_BenchmarkState_2eproto() {
  delete BenchmarkState::default_instance_;
  delete BenchmarkState_reflection_;
}

void protobuf_AddDesc_BenchmarkState_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_BenchmarkState_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::roah_rsbb_msgs::protobuf_AddDesc_Time_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024BenchmarkState.proto\022\016roah_rsbb_msgs\032\n"
    "Time.proto\"\336\002\n\016BenchmarkState\022\026\n\016benchma"
    "rk_type\030\001 \002(\t\022=\n\017benchmark_state\030\002 \002(\0162$"
    ".roah_rsbb_msgs.BenchmarkState.State\022-\n\017"
    "acknowledgement\030\003 \001(\0132\024.roah_rsbb_msgs.T"
    "ime\022\025\n\rtarget_pose_x\030\n \001(\001\022\025\n\rtarget_pos"
    "e_y\030\013 \001(\001\022\031\n\021target_pose_theta\030\014 \001(\001\022\024\n\014"
    "generic_goal\030\r \001(\t\"&\n\010CompType\022\014\n\007COMP_I"
    "D\020\2124\022\014\n\010MSG_TYPE\020\024\"\?\n\005State\022\010\n\004STOP\020\000\022\013\n"
    "\007PREPARE\020\001\022\013\n\007GOAL_TX\020\002\022\022\n\016WAITING_RESUL"
    "T\020\003B0\n\030eu.rockin.roah_rsbb_msgsB\024Benchma"
    "rkStateProtos", 453);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "BenchmarkState.proto", &protobuf_RegisterTypes);
  BenchmarkState::default_instance_ = new BenchmarkState();
  BenchmarkState::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_BenchmarkState_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_BenchmarkState_2eproto {
  StaticDescriptorInitializer_BenchmarkState_2eproto() {
    protobuf_AddDesc_BenchmarkState_2eproto();
  }
} static_descriptor_initializer_BenchmarkState_2eproto_;

// ===================================================================

const ::google::protobuf::EnumDescriptor* BenchmarkState_CompType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BenchmarkState_CompType_descriptor_;
}
bool BenchmarkState_CompType_IsValid(int value) {
  switch(value) {
    case 20:
    case 6666:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const BenchmarkState_CompType BenchmarkState::COMP_ID;
const BenchmarkState_CompType BenchmarkState::MSG_TYPE;
const BenchmarkState_CompType BenchmarkState::CompType_MIN;
const BenchmarkState_CompType BenchmarkState::CompType_MAX;
const int BenchmarkState::CompType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* BenchmarkState_State_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BenchmarkState_State_descriptor_;
}
bool BenchmarkState_State_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const BenchmarkState_State BenchmarkState::STOP;
const BenchmarkState_State BenchmarkState::PREPARE;
const BenchmarkState_State BenchmarkState::GOAL_TX;
const BenchmarkState_State BenchmarkState::WAITING_RESULT;
const BenchmarkState_State BenchmarkState::State_MIN;
const BenchmarkState_State BenchmarkState::State_MAX;
const int BenchmarkState::State_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BenchmarkState::kBenchmarkTypeFieldNumber;
const int BenchmarkState::kBenchmarkStateFieldNumber;
const int BenchmarkState::kAcknowledgementFieldNumber;
const int BenchmarkState::kTargetPoseXFieldNumber;
const int BenchmarkState::kTargetPoseYFieldNumber;
const int BenchmarkState::kTargetPoseThetaFieldNumber;
const int BenchmarkState::kGenericGoalFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BenchmarkState::BenchmarkState()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:roah_rsbb_msgs.BenchmarkState)
}

void BenchmarkState::InitAsDefaultInstance() {
  acknowledgement_ = const_cast< ::roah_rsbb_msgs::Time*>(&::roah_rsbb_msgs::Time::default_instance());
}

BenchmarkState::BenchmarkState(const BenchmarkState& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:roah_rsbb_msgs.BenchmarkState)
}

void BenchmarkState::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  benchmark_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  benchmark_state_ = 0;
  acknowledgement_ = NULL;
  target_pose_x_ = 0;
  target_pose_y_ = 0;
  target_pose_theta_ = 0;
  generic_goal_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BenchmarkState::~BenchmarkState() {
  // @@protoc_insertion_point(destructor:roah_rsbb_msgs.BenchmarkState)
  SharedDtor();
}

void BenchmarkState::SharedDtor() {
  benchmark_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  generic_goal_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete acknowledgement_;
  }
}

void BenchmarkState::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BenchmarkState::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BenchmarkState_descriptor_;
}

const BenchmarkState& BenchmarkState::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_BenchmarkState_2eproto();
  return *default_instance_;
}

BenchmarkState* BenchmarkState::default_instance_ = NULL;

BenchmarkState* BenchmarkState::New(::google::protobuf::Arena* arena) const {
  BenchmarkState* n = new BenchmarkState;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BenchmarkState::Clear() {
// @@protoc_insertion_point(message_clear_start:roah_rsbb_msgs.BenchmarkState)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(BenchmarkState, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<BenchmarkState*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 127u) {
    ZR_(target_pose_x_, target_pose_theta_);
    if (has_benchmark_type()) {
      benchmark_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    benchmark_state_ = 0;
    if (has_acknowledgement()) {
      if (acknowledgement_ != NULL) acknowledgement_->::roah_rsbb_msgs::Time::Clear();
    }
    if (has_generic_goal()) {
      generic_goal_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool BenchmarkState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:roah_rsbb_msgs.BenchmarkState)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string benchmark_type = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_benchmark_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->benchmark_type().data(), this->benchmark_type().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "roah_rsbb_msgs.BenchmarkState.benchmark_type");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_benchmark_state;
        break;
      }

      // required .roah_rsbb_msgs.BenchmarkState.State benchmark_state = 2;
      case 2: {
        if (tag == 16) {
         parse_benchmark_state:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::roah_rsbb_msgs::BenchmarkState_State_IsValid(value)) {
            set_benchmark_state(static_cast< ::roah_rsbb_msgs::BenchmarkState_State >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_acknowledgement;
        break;
      }

      // optional .roah_rsbb_msgs.Time acknowledgement = 3;
      case 3: {
        if (tag == 26) {
         parse_acknowledgement:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_acknowledgement()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(81)) goto parse_target_pose_x;
        break;
      }

      // optional double target_pose_x = 10;
      case 10: {
        if (tag == 81) {
         parse_target_pose_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &target_pose_x_)));
          set_has_target_pose_x();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(89)) goto parse_target_pose_y;
        break;
      }

      // optional double target_pose_y = 11;
      case 11: {
        if (tag == 89) {
         parse_target_pose_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &target_pose_y_)));
          set_has_target_pose_y();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(97)) goto parse_target_pose_theta;
        break;
      }

      // optional double target_pose_theta = 12;
      case 12: {
        if (tag == 97) {
         parse_target_pose_theta:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &target_pose_theta_)));
          set_has_target_pose_theta();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_generic_goal;
        break;
      }

      // optional string generic_goal = 13;
      case 13: {
        if (tag == 106) {
         parse_generic_goal:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_generic_goal()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->generic_goal().data(), this->generic_goal().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "roah_rsbb_msgs.BenchmarkState.generic_goal");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:roah_rsbb_msgs.BenchmarkState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:roah_rsbb_msgs.BenchmarkState)
  return false;
#undef DO_
}

void BenchmarkState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:roah_rsbb_msgs.BenchmarkState)
  // required string benchmark_type = 1;
  if (has_benchmark_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->benchmark_type().data(), this->benchmark_type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "roah_rsbb_msgs.BenchmarkState.benchmark_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->benchmark_type(), output);
  }

  // required .roah_rsbb_msgs.BenchmarkState.State benchmark_state = 2;
  if (has_benchmark_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->benchmark_state(), output);
  }

  // optional .roah_rsbb_msgs.Time acknowledgement = 3;
  if (has_acknowledgement()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->acknowledgement_, output);
  }

  // optional double target_pose_x = 10;
  if (has_target_pose_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(10, this->target_pose_x(), output);
  }

  // optional double target_pose_y = 11;
  if (has_target_pose_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(11, this->target_pose_y(), output);
  }

  // optional double target_pose_theta = 12;
  if (has_target_pose_theta()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(12, this->target_pose_theta(), output);
  }

  // optional string generic_goal = 13;
  if (has_generic_goal()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->generic_goal().data(), this->generic_goal().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "roah_rsbb_msgs.BenchmarkState.generic_goal");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->generic_goal(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:roah_rsbb_msgs.BenchmarkState)
}

::google::protobuf::uint8* BenchmarkState::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:roah_rsbb_msgs.BenchmarkState)
  // required string benchmark_type = 1;
  if (has_benchmark_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->benchmark_type().data(), this->benchmark_type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "roah_rsbb_msgs.BenchmarkState.benchmark_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->benchmark_type(), target);
  }

  // required .roah_rsbb_msgs.BenchmarkState.State benchmark_state = 2;
  if (has_benchmark_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->benchmark_state(), target);
  }

  // optional .roah_rsbb_msgs.Time acknowledgement = 3;
  if (has_acknowledgement()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->acknowledgement_, false, target);
  }

  // optional double target_pose_x = 10;
  if (has_target_pose_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(10, this->target_pose_x(), target);
  }

  // optional double target_pose_y = 11;
  if (has_target_pose_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(11, this->target_pose_y(), target);
  }

  // optional double target_pose_theta = 12;
  if (has_target_pose_theta()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(12, this->target_pose_theta(), target);
  }

  // optional string generic_goal = 13;
  if (has_generic_goal()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->generic_goal().data(), this->generic_goal().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "roah_rsbb_msgs.BenchmarkState.generic_goal");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->generic_goal(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:roah_rsbb_msgs.BenchmarkState)
  return target;
}

int BenchmarkState::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:roah_rsbb_msgs.BenchmarkState)
  int total_size = 0;

  if (has_benchmark_type()) {
    // required string benchmark_type = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->benchmark_type());
  }

  if (has_benchmark_state()) {
    // required .roah_rsbb_msgs.BenchmarkState.State benchmark_state = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->benchmark_state());
  }

  return total_size;
}
int BenchmarkState::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:roah_rsbb_msgs.BenchmarkState)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string benchmark_type = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->benchmark_type());

    // required .roah_rsbb_msgs.BenchmarkState.State benchmark_state = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->benchmark_state());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[2 / 32] & 124u) {
    // optional .roah_rsbb_msgs.Time acknowledgement = 3;
    if (has_acknowledgement()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->acknowledgement_);
    }

    // optional double target_pose_x = 10;
    if (has_target_pose_x()) {
      total_size += 1 + 8;
    }

    // optional double target_pose_y = 11;
    if (has_target_pose_y()) {
      total_size += 1 + 8;
    }

    // optional double target_pose_theta = 12;
    if (has_target_pose_theta()) {
      total_size += 1 + 8;
    }

    // optional string generic_goal = 13;
    if (has_generic_goal()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->generic_goal());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BenchmarkState::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:roah_rsbb_msgs.BenchmarkState)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const BenchmarkState* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const BenchmarkState>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:roah_rsbb_msgs.BenchmarkState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:roah_rsbb_msgs.BenchmarkState)
    MergeFrom(*source);
  }
}

void BenchmarkState::MergeFrom(const BenchmarkState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:roah_rsbb_msgs.BenchmarkState)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_benchmark_type()) {
      set_has_benchmark_type();
      benchmark_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.benchmark_type_);
    }
    if (from.has_benchmark_state()) {
      set_benchmark_state(from.benchmark_state());
    }
    if (from.has_acknowledgement()) {
      mutable_acknowledgement()->::roah_rsbb_msgs::Time::MergeFrom(from.acknowledgement());
    }
    if (from.has_target_pose_x()) {
      set_target_pose_x(from.target_pose_x());
    }
    if (from.has_target_pose_y()) {
      set_target_pose_y(from.target_pose_y());
    }
    if (from.has_target_pose_theta()) {
      set_target_pose_theta(from.target_pose_theta());
    }
    if (from.has_generic_goal()) {
      set_has_generic_goal();
      generic_goal_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.generic_goal_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void BenchmarkState::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:roah_rsbb_msgs.BenchmarkState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BenchmarkState::CopyFrom(const BenchmarkState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:roah_rsbb_msgs.BenchmarkState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BenchmarkState::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_acknowledgement()) {
    if (!this->acknowledgement_->IsInitialized()) return false;
  }
  return true;
}

void BenchmarkState::Swap(BenchmarkState* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BenchmarkState::InternalSwap(BenchmarkState* other) {
  benchmark_type_.Swap(&other->benchmark_type_);
  std::swap(benchmark_state_, other->benchmark_state_);
  std::swap(acknowledgement_, other->acknowledgement_);
  std::swap(target_pose_x_, other->target_pose_x_);
  std::swap(target_pose_y_, other->target_pose_y_);
  std::swap(target_pose_theta_, other->target_pose_theta_);
  generic_goal_.Swap(&other->generic_goal_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BenchmarkState::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BenchmarkState_descriptor_;
  metadata.reflection = BenchmarkState_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BenchmarkState

// required string benchmark_type = 1;
bool BenchmarkState::has_benchmark_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BenchmarkState::set_has_benchmark_type() {
  _has_bits_[0] |= 0x00000001u;
}
void BenchmarkState::clear_has_benchmark_type() {
  _has_bits_[0] &= ~0x00000001u;
}
void BenchmarkState::clear_benchmark_type() {
  benchmark_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_benchmark_type();
}
 const ::std::string& BenchmarkState::benchmark_type() const {
  // @@protoc_insertion_point(field_get:roah_rsbb_msgs.BenchmarkState.benchmark_type)
  return benchmark_type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BenchmarkState::set_benchmark_type(const ::std::string& value) {
  set_has_benchmark_type();
  benchmark_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:roah_rsbb_msgs.BenchmarkState.benchmark_type)
}
 void BenchmarkState::set_benchmark_type(const char* value) {
  set_has_benchmark_type();
  benchmark_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:roah_rsbb_msgs.BenchmarkState.benchmark_type)
}
 void BenchmarkState::set_benchmark_type(const char* value, size_t size) {
  set_has_benchmark_type();
  benchmark_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:roah_rsbb_msgs.BenchmarkState.benchmark_type)
}
 ::std::string* BenchmarkState::mutable_benchmark_type() {
  set_has_benchmark_type();
  // @@protoc_insertion_point(field_mutable:roah_rsbb_msgs.BenchmarkState.benchmark_type)
  return benchmark_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BenchmarkState::release_benchmark_type() {
  // @@protoc_insertion_point(field_release:roah_rsbb_msgs.BenchmarkState.benchmark_type)
  clear_has_benchmark_type();
  return benchmark_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BenchmarkState::set_allocated_benchmark_type(::std::string* benchmark_type) {
  if (benchmark_type != NULL) {
    set_has_benchmark_type();
  } else {
    clear_has_benchmark_type();
  }
  benchmark_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), benchmark_type);
  // @@protoc_insertion_point(field_set_allocated:roah_rsbb_msgs.BenchmarkState.benchmark_type)
}

// required .roah_rsbb_msgs.BenchmarkState.State benchmark_state = 2;
bool BenchmarkState::has_benchmark_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BenchmarkState::set_has_benchmark_state() {
  _has_bits_[0] |= 0x00000002u;
}
void BenchmarkState::clear_has_benchmark_state() {
  _has_bits_[0] &= ~0x00000002u;
}
void BenchmarkState::clear_benchmark_state() {
  benchmark_state_ = 0;
  clear_has_benchmark_state();
}
 ::roah_rsbb_msgs::BenchmarkState_State BenchmarkState::benchmark_state() const {
  // @@protoc_insertion_point(field_get:roah_rsbb_msgs.BenchmarkState.benchmark_state)
  return static_cast< ::roah_rsbb_msgs::BenchmarkState_State >(benchmark_state_);
}
 void BenchmarkState::set_benchmark_state(::roah_rsbb_msgs::BenchmarkState_State value) {
  assert(::roah_rsbb_msgs::BenchmarkState_State_IsValid(value));
  set_has_benchmark_state();
  benchmark_state_ = value;
  // @@protoc_insertion_point(field_set:roah_rsbb_msgs.BenchmarkState.benchmark_state)
}

// optional .roah_rsbb_msgs.Time acknowledgement = 3;
bool BenchmarkState::has_acknowledgement() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BenchmarkState::set_has_acknowledgement() {
  _has_bits_[0] |= 0x00000004u;
}
void BenchmarkState::clear_has_acknowledgement() {
  _has_bits_[0] &= ~0x00000004u;
}
void BenchmarkState::clear_acknowledgement() {
  if (acknowledgement_ != NULL) acknowledgement_->::roah_rsbb_msgs::Time::Clear();
  clear_has_acknowledgement();
}
const ::roah_rsbb_msgs::Time& BenchmarkState::acknowledgement() const {
  // @@protoc_insertion_point(field_get:roah_rsbb_msgs.BenchmarkState.acknowledgement)
  return acknowledgement_ != NULL ? *acknowledgement_ : *default_instance_->acknowledgement_;
}
::roah_rsbb_msgs::Time* BenchmarkState::mutable_acknowledgement() {
  set_has_acknowledgement();
  if (acknowledgement_ == NULL) {
    acknowledgement_ = new ::roah_rsbb_msgs::Time;
  }
  // @@protoc_insertion_point(field_mutable:roah_rsbb_msgs.BenchmarkState.acknowledgement)
  return acknowledgement_;
}
::roah_rsbb_msgs::Time* BenchmarkState::release_acknowledgement() {
  // @@protoc_insertion_point(field_release:roah_rsbb_msgs.BenchmarkState.acknowledgement)
  clear_has_acknowledgement();
  ::roah_rsbb_msgs::Time* temp = acknowledgement_;
  acknowledgement_ = NULL;
  return temp;
}
void BenchmarkState::set_allocated_acknowledgement(::roah_rsbb_msgs::Time* acknowledgement) {
  delete acknowledgement_;
  acknowledgement_ = acknowledgement;
  if (acknowledgement) {
    set_has_acknowledgement();
  } else {
    clear_has_acknowledgement();
  }
  // @@protoc_insertion_point(field_set_allocated:roah_rsbb_msgs.BenchmarkState.acknowledgement)
}

// optional double target_pose_x = 10;
bool BenchmarkState::has_target_pose_x() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void BenchmarkState::set_has_target_pose_x() {
  _has_bits_[0] |= 0x00000008u;
}
void BenchmarkState::clear_has_target_pose_x() {
  _has_bits_[0] &= ~0x00000008u;
}
void BenchmarkState::clear_target_pose_x() {
  target_pose_x_ = 0;
  clear_has_target_pose_x();
}
 double BenchmarkState::target_pose_x() const {
  // @@protoc_insertion_point(field_get:roah_rsbb_msgs.BenchmarkState.target_pose_x)
  return target_pose_x_;
}
 void BenchmarkState::set_target_pose_x(double value) {
  set_has_target_pose_x();
  target_pose_x_ = value;
  // @@protoc_insertion_point(field_set:roah_rsbb_msgs.BenchmarkState.target_pose_x)
}

// optional double target_pose_y = 11;
bool BenchmarkState::has_target_pose_y() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void BenchmarkState::set_has_target_pose_y() {
  _has_bits_[0] |= 0x00000010u;
}
void BenchmarkState::clear_has_target_pose_y() {
  _has_bits_[0] &= ~0x00000010u;
}
void BenchmarkState::clear_target_pose_y() {
  target_pose_y_ = 0;
  clear_has_target_pose_y();
}
 double BenchmarkState::target_pose_y() const {
  // @@protoc_insertion_point(field_get:roah_rsbb_msgs.BenchmarkState.target_pose_y)
  return target_pose_y_;
}
 void BenchmarkState::set_target_pose_y(double value) {
  set_has_target_pose_y();
  target_pose_y_ = value;
  // @@protoc_insertion_point(field_set:roah_rsbb_msgs.BenchmarkState.target_pose_y)
}

// optional double target_pose_theta = 12;
bool BenchmarkState::has_target_pose_theta() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void BenchmarkState::set_has_target_pose_theta() {
  _has_bits_[0] |= 0x00000020u;
}
void BenchmarkState::clear_has_target_pose_theta() {
  _has_bits_[0] &= ~0x00000020u;
}
void BenchmarkState::clear_target_pose_theta() {
  target_pose_theta_ = 0;
  clear_has_target_pose_theta();
}
 double BenchmarkState::target_pose_theta() const {
  // @@protoc_insertion_point(field_get:roah_rsbb_msgs.BenchmarkState.target_pose_theta)
  return target_pose_theta_;
}
 void BenchmarkState::set_target_pose_theta(double value) {
  set_has_target_pose_theta();
  target_pose_theta_ = value;
  // @@protoc_insertion_point(field_set:roah_rsbb_msgs.BenchmarkState.target_pose_theta)
}

// optional string generic_goal = 13;
bool BenchmarkState::has_generic_goal() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void BenchmarkState::set_has_generic_goal() {
  _has_bits_[0] |= 0x00000040u;
}
void BenchmarkState::clear_has_generic_goal() {
  _has_bits_[0] &= ~0x00000040u;
}
void BenchmarkState::clear_generic_goal() {
  generic_goal_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_generic_goal();
}
 const ::std::string& BenchmarkState::generic_goal() const {
  // @@protoc_insertion_point(field_get:roah_rsbb_msgs.BenchmarkState.generic_goal)
  return generic_goal_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BenchmarkState::set_generic_goal(const ::std::string& value) {
  set_has_generic_goal();
  generic_goal_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:roah_rsbb_msgs.BenchmarkState.generic_goal)
}
 void BenchmarkState::set_generic_goal(const char* value) {
  set_has_generic_goal();
  generic_goal_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:roah_rsbb_msgs.BenchmarkState.generic_goal)
}
 void BenchmarkState::set_generic_goal(const char* value, size_t size) {
  set_has_generic_goal();
  generic_goal_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:roah_rsbb_msgs.BenchmarkState.generic_goal)
}
 ::std::string* BenchmarkState::mutable_generic_goal() {
  set_has_generic_goal();
  // @@protoc_insertion_point(field_mutable:roah_rsbb_msgs.BenchmarkState.generic_goal)
  return generic_goal_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BenchmarkState::release_generic_goal() {
  // @@protoc_insertion_point(field_release:roah_rsbb_msgs.BenchmarkState.generic_goal)
  clear_has_generic_goal();
  return generic_goal_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BenchmarkState::set_allocated_generic_goal(::std::string* generic_goal) {
  if (generic_goal != NULL) {
    set_has_generic_goal();
  } else {
    clear_has_generic_goal();
  }
  generic_goal_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), generic_goal);
  // @@protoc_insertion_point(field_set_allocated:roah_rsbb_msgs.BenchmarkState.generic_goal)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace roah_rsbb_msgs

// @@protoc_insertion_point(global_scope)
